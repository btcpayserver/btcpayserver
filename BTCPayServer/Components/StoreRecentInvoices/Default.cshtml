@using BTCPayServer.Abstractions.Extensions
@using BTCPayServer.Client.Models
@using BTCPayServer.Services
@using BTCPayServer.Services.Invoices
@inject DisplayFormatter DisplayFormatter
@inject PaymentMethodHandlerDictionary PaymentMethodHandlerDictionary
@model BTCPayServer.Components.StoreRecentInvoices.StoreRecentInvoicesViewModel

<div class="widget store-recent-invoices" id="StoreRecentInvoices-@Model.Store.Id">
    <header>
        <h3>Recent Invoices</h3>
        @if (Model.Invoices.Any())
        {
            <a asp-controller="UIInvoice" asp-action="ListInvoices" asp-route-storeId="@Model.Store.Id">View All</a>
        }
    </header>
    @if (Model.InitialRendering)
    {
        <div class="loading d-flex justify-content-center p-3">
            <div class="spinner-border text-light" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
        <script>
            (async () => {
                const url = @Safe.Json(Url.Action("RecentInvoices", "UIStores", new { storeId = Model.Store.Id, cryptoCode = Model.CryptoCode }));
                const storeId = @Safe.Json(Model.Store.Id);
                const response = await fetch(url);
                if (response.ok) {
                    document.getElementById(`StoreRecentInvoices-${storeId}`).outerHTML = await response.text();
                }
            })();
        </script>
    }
    else if (Model.Invoices.Any())
    {
        <table class="table table-hover mt-3 mb-0">
            <thead>
            <tr>
                <th class="w-125px">Date</th>
                <th class="text-nowrap">Invoice Id</th>
                <th>Status</th>
                <th class="text-end">Amount</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var invoice in Model.Invoices)
            {
                <tr>
                    <td>@invoice.Date.ToTimeAgo()</td>
                    <td>
                        <a asp-controller="UIInvoice" asp-action="Invoice" asp-route-invoiceId="@invoice.InvoiceId" class="text-break">@invoice.InvoiceId</a>
                    </td>
                    <td>
                        <vc:invoice-status state="invoice.Status" payments="invoice.Details.Payments" invoice-id="@invoice.InvoiceId"
                           is-archived="invoice.Details.Archived" has-refund="invoice.HasRefund" />
                    </td>
                    <td class="text-end">
                        <span data-sensitive>@DisplayFormatter.Currency(invoice.Amount, invoice.Currency)</span>
                    </td>
                </tr>
            }
            </tbody>
        </table>
    }
    else
    {
        <p class="text-secondary my-3">
            There are no recent invoices.
        </p>
        <a asp-controller="UIInvoice" asp-action="CreateInvoice" asp-route-storeId="@Model.Store.Id" class="fw-semibold">
            Create Invoice
        </a>
    }
</div>

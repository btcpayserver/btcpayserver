@using BTCPayServer.Client.Models
@model (InvoiceDetailsModel Invoice, bool ShowAddress) 
@{ var invoice = Model.Invoice; }
@inject PaymentMethodHandlerDictionary PaymentMethodHandlerDictionary

<div class="row mb-4">
    <div class="col-md-12 invoice-payments">
        <h3 class="mb-0">Invoice Summary</h3>
        <table class="table table-sm table-responsive-md">
            <thead class="thead-inverse">
            <tr>
                <th>Payment method</th>
                @if (Model.ShowAddress)
                {
                <th>Address</th>
                }
                <th class="text-right">Rate</th>
                <th class="text-right">Paid</th>
                <th class="text-right">Due</th>
                @if (invoice.StatusException == InvoiceExceptionStatus.PaidOver)
                {
                    <th class="text-right">Overpaid</th>
                }
            </tr>
            </thead>
            <tbody>
            @foreach (var payment in invoice.CryptoPayments)
            {
                <tr>
                    <td>@payment.PaymentMethod</td>
                    @if (Model.ShowAddress)
                    {
                    <td title="@payment.Address">
                        <span class="text-truncate d-block" style="max-width: 400px">@payment.Address</span>
                    </td>
                    }
                    <td class="text-right">@payment.Rate</td>
                    <td class="text-right">@payment.Paid</td>
                    <td class="text-right">@payment.Due</td>
                    @if (invoice.StatusException == InvoiceExceptionStatus.PaidOver)
                    {
                        <td class="text-right">@payment.Overpaid</td>
                    }
                </tr>
            }
            </tbody>
        </table>
    </div>
</div>
@{
    var grouped = invoice.Payments.GroupBy(payment => payment.GetPaymentMethodId()?.PaymentType).Where(entities => entities.Key!= null);    
}
@foreach (var paymentGroup in grouped)
{
    <partial name="@paymentGroup.Key.InvoiceViewPaymentPartialName" model="@paymentGroup.ToList()" />
}

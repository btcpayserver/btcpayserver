@using BTCPayServer.Abstractions.Models
@using BTCPayServer.Components
@using BTCPayServer.Views.Server
@using BTCPayServer.Views.Stores
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using BTCPayServer.Abstractions.Extensions
@using BTCPayServer.Client
@model BTCPayServer.Models.ServerViewModels.RolesViewModel
@{
    Layout = "_NavLayout.cshtml";
    var storeId = Context.GetRouteValue("storeId") as string;
    var controller = ViewContext.RouteData.Values["controller"].ToString().TrimEnd("Controller", StringComparison.InvariantCultureIgnoreCase);
    if (storeId is null)
        ViewData.SetActivePage(ServerNavPages.Roles);

    else
    {
        ViewData.SetActivePage(StoreNavPages.Roles);
    }
    var nextRoleSortOrder = (string) ViewData["NextRoleSortOrder"];
    String roleSortOrder = null;
    switch (nextRoleSortOrder)
    {
        case "asc":
            roleSortOrder = "desc";
            break;
        case "desc":
            roleSortOrder = "asc";
            break;
    }

    var sortIconClass = "fa-sort";
    if (roleSortOrder != null)
    {
        sortIconClass = $"fa-sort-alpha-{roleSortOrder}";
    }

    var sortByDesc = "Sort by descending...";
    var sortByAsc = "Sort by ascending...";

    var showInUseColumn = !Model.Roles.Any(r => r.IsUsed is null);
}

<div class="d-flex align-items-center justify-content-between mb-3">
    <h3 class="mb-0">@ViewData["Title"]</h3>
    <a asp-action="CreateOrEditRole" asp-route-storeId="@storeId" class="btn btn-primary" role="button" id="CreateRole" asp-route-roleId="create"
       asp-controller="@controller">
        <span class="fa fa-plus"></span>
        Add Role
    </a>
</div>

<form asp-action="ListRoles" asp-route-storeId="@storeId" asp-route-sortOrder="@(roleSortOrder)" style="max-width:640px"
      asp-controller="@controller">
    <div class="input-group">
        <input asp-for="SearchTerm" class="form-control" placeholder="Search by role..." />
        <button type="submit" class="btn btn-secondary" title="Search by role">
            <span class="fa fa-search"></span> Search
        </button>
    </div>
    <span asp-validation-for="SearchTerm" class="text-danger"></span>
</form>

<div class="table-responsive">
    <table class="table table-hover">
        <thead>
        <tr>
            <th>
                <a
                    asp-controller="@controller"
                    asp-action="ListRoles"
                    asp-route-storeId="@storeId"
                    asp-route-sortOrder="@(nextRoleSortOrder ?? "asc")"
                    class="text-nowrap"
                    title="@(nextRoleSortOrder == "desc" ? sortByAsc : sortByDesc)">
                    Role
                    <span class="fa @(sortIconClass)" />
                </a>
            </th>
            <th >Policies</th>
            @if (showInUseColumn)
            {
                <th>In use</th>
            }
            <th class="text-end">Actions</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var role in Model.Roles)
        {
            <tr>
                <td class="d-flex justify-content-between">
                    <span class="me-2">@role.Role</span>
                    @if (role.IsServerRole)
                    {
                        <span class="badge bg-dark">
                            Server-wide
                        </span>
                    }

                </td>
                <td>
                    @foreach (var policy in role.Policies)
                    {
                        <span class="badge bg-secondary mx-1">@policy</span>
                    }
                </td>
                @if (showInUseColumn)
                {
                    <td class="text-center">
                        @if (role.IsUsed is true)
                        {
                            <span class="text-success fa fa-check"></span>
                        }
                        else
                        {
                            <span class="text-danger fa fa-times"></span>
                        }
                    </td>
                }
                <td class="text-end">

                    <a permission="@(role.IsServerRole ? Policies.CanModifyServerSettings : Policies.CanModifyStoreSettings)" asp-action="CreateOrEditRole" asp-route-storeId="@storeId" asp-route-roleId="@role.Id"
                       asp-controller="@(role.IsServerRole ? "UIServer" : "UIStores")">
                        Edit
                    </a> -
                    <a permission="@(role.IsServerRole ? Policies.CanModifyServerSettings : Policies.CanModifyStoreSettings)" asp-action="DeleteRole" asp-route-storeId="@storeId" asp-route-roleId="@role.Id"
                       asp-controller="@(role.IsServerRole ? "UIServer" : "UIStores")">
                        Remove
                    </a>

                </td>
            </tr>
        }
        </tbody>
    </table>
</div>

<vc:pager view-model="Model"></vc:pager>

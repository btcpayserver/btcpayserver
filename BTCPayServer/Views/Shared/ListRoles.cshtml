@using BTCPayServer.Components
@using BTCPayServer.Views.Server
@using BTCPayServer.Views.Stores
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using BTCPayServer.Abstractions.Extensions
@using BTCPayServer.Client
@model BTCPayServer.Models.ServerViewModels.RolesViewModel
@{
    Layout = "_NavLayout.cshtml";
    var storeId = Context.GetRouteValue("storeId") as string;
    var controller = ViewContext.RouteData.Values["controller"].ToString().TrimEnd("Controller", StringComparison.InvariantCultureIgnoreCase);
    if (storeId is null)
        ViewData.SetActivePage(ServerNavPages.Roles);

    else
    {
        ViewData.SetActivePage(StoreNavPages.Roles);
    }
    var nextRoleSortOrder = (string) ViewData["NextRoleSortOrder"];
    String roleSortOrder = null;
    switch (nextRoleSortOrder)
    {
        case "asc":
            roleSortOrder = "desc";
            break;
        case "desc":
            roleSortOrder = "asc";
            break;
    }

    var sortIconClass = "fa-sort";
    if (roleSortOrder != null)
    {
        sortIconClass = $"fa-sort-alpha-{roleSortOrder}";
    }

    var sortByDesc = "Sort by descending...";
    var sortByAsc = "Sort by ascending...";

    var showInUseColumn = !Model.Roles.Any(r => r.IsUsed is null);
}

<div class="d-flex align-items-center justify-content-between mb-3">
    <h3 class="mb-0">@ViewData["Title"]</h3>
    <a asp-action="CreateOrEditRole" asp-route-storeId="@storeId" class="btn btn-primary" role="button" id="CreateRole" asp-route-role="create"
       asp-controller="@controller">
        <span class="fa fa-plus"></span>
        Add Role
    </a>
</div>

<div class="table-responsive">
    <table class="table table-hover">
        <thead>
        <tr>
            <th>
                <a
                    asp-controller="@controller"
                    asp-action="ListRoles"
                    asp-route-storeId="@storeId"
                    asp-route-sortOrder="@(nextRoleSortOrder ?? "asc")"
                    class="text-nowrap"
                    title="@(nextRoleSortOrder == "desc" ? sortByAsc : sortByDesc)">
                    Role
                    <span class="fa @(sortIconClass)" />
                </a>
            </th>
            <th >Permissions</th>
            @if (showInUseColumn)
            {
                <th>In use</th>
            }
            <th class="text-end">Actions</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var role in Model.Roles)
        {
            <tr>
                <td>
                    <div class="d-flex flex-wrap align-items-center gap-2">
                        <span class="me-1">@role.Role</span>
                        @if (role.IsServerRole)
                        {
                            <span class="badge bg-dark">
                                Server-wide
                            </span>
                            @if (Model.DefaultRole == role.Id)
                            {
                                <span class="badge bg-info">
                                    Default
                                </span>
                            }
                        }
                    </div>
                </td>
                <td>
                    @if (!role.Permissions.Any())
                    {
                        <span class="text-warning">No policies</span>
                    }
                    else
                    {
                        @foreach (var policy in role.Permissions)
                        {
                            <code class="d-block text-break">@policy</code>
                        }
                    }
                </td>
                @if (showInUseColumn)
                {
                    <td class="text-center">
                        @if (role.IsUsed is true)
                        {
                            <span class="text-success fa fa-check"></span>
                        }
                        else
                        {
                            <span class="text-danger fa fa-times"></span>
                        }
                    </td>
                }
                <td class="text-end">
                    <a permission="@(role.IsServerRole ? Policies.CanModifyServerSettings : Policies.CanModifyStoreSettings)" asp-action="CreateOrEditRole" asp-route-storeId="@storeId" asp-route-role="@role.Role"
                       asp-controller="@(role.IsServerRole ? "UIServer" : "UIStores")">
                        Edit
                    </a> -
						<a permission="@(role.IsServerRole ? Policies.CanModifyServerSettings : Policies.CanModifyStoreSettings)" asp-action="DeleteRole" asp-route-storeId="@storeId" asp-route-role="@role.Role"
                       asp-controller="@(role.IsServerRole ? "UIServer" : "UIStores")">
                        Remove
                    </a>
                    @if (role.IsServerRole && Model.DefaultRole != role.Id)
                    {
                        
                        <a permission="@Policies.CanModifyServerSettings" asp-action="SetDefaultRole" asp-route-role="@role.Role"
                           asp-controller="UIServer" id="SetDefault">
                            - Set as default
                        </a>
                    }
                </td>
            </tr>
        }
        </tbody>
    </table>
</div>

<vc:pager view-model="Model"></vc:pager>

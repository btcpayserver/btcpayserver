@using BTCPayServer.TagHelpers
@using BTCPayServer.Views.Stores
@using Microsoft.AspNetCore.Html
@using Microsoft.AspNetCore.Mvc.TagHelpers
@{
	ViewData.SetActivePage(StoreNavPages.PayButton, "Pay Button", Context.GetStoreData().Id);
}

<div class="sticky-header">
    <h2 class="my-1" text-translate="true">@ViewData["Title"]</h2>
</div>

<partial name="_StatusMessage" />

<div class="row">
	<div class="col-xl-8 col-xxl-constrain">
        <div class="alert alert-warning alert-dismissible mb-4" role="alert">
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="@StringLocalizer["Close"]">
                <vc:icon symbol="close" />
            </button>
            <h5 class="alert-heading" text-translate="true">Warning: Payment button should only be used for tips and donations</h5>
            <p>
                @ViewLocalizer["Using the payment button for e-commerce integrations is not recommended since order relevant information can be modified by the user. For e-commerce, you should use our {0}. If this store process commercial transactions, we advise you to {1} before using the payment button.",
                    Html.ActionLink(StringLocalizer["Greenfield API"], "SwaggerDocs", "UIHome", new { }, new { @class = "alert-link" }),
                    Html.ActionLink(StringLocalizer["create a separate store"], "CreateStore", "UIUserStores", new { }, new { @class = "alert-link" })]
            </p>
        </div>
		<p text-translate="true">To start using Pay Button, you need to enable this feature explicitly. Once you do so, anyone could create an invoice on your store (via API, for example).</p>
		<form method="post">
			@Html.Hidden("EnableStore", true)
			<button name="command" id="enable-pay-button" type="submit" value="save" class="btn btn-primary" text-translate="true">
				Enable
			</button>
		</form>
	</div>
</div>

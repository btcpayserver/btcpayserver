@using BTCPayServer.Plugins.PointOfSale.Models
@using BTCPayServer.Services
@using Newtonsoft.Json.Linq;
@inject DisplayFormatter DisplayFormatter
@inject BTCPayServer.Security.ContentSecurityPolicies Csp
@model BTCPayServer.Plugins.PointOfSale.Models.ViewPointOfSaleViewModel
@{
    Layout = "PointOfSale/Public/_Layout";
    Csp.UnsafeEval();
}
@section PageHeadContent {
    <link href="~/pos/cart.css" asp-append-version="true" rel="stylesheet" />
}
@section PageFootContent {
    <script>const srvModel = @Safe.Json(Model);</script>
    <script src="~/vendor/vuejs/vue.min.js" asp-append-version="true"></script>
    <script src="~/pos/common.js" asp-append-version="true"></script>
    <script src="~/pos/cart.js" asp-append-version="true"></script>
}

<div id="app">
    <div class="public-page-wrap container-xl">
        <header class="sticky-top bg-body d-flex flex-column py-3 pt-lg-4 gap-3">
            <div class="d-flex align-items-center justify-content-center gap-3 pe-5 position-relative">
                <h1 class="mb-0">@(string.IsNullOrEmpty(Model.Title) ? Model.StoreName : Model.Title)</h1>
                <button id="CartToggle" class="cart-toggle-btn" type="button" data-bs-toggle="offcanvas" data-bs-target="#cart" aria-controls="cart" :disabled="cartCount === 0">
                    <vc:icon symbol="pos-cart" />
                    <span id="CartBadge" class="badge rounded-pill bg-danger p-1 ms-1" v-text="cartCount" v-if="cartCount !== 0"></span>
                </button>
            </div>
            <input id="SearchTerm" class="form-control" placeholder="Find product" v-model="searchTerm">
            <div v-if="allCategories" class="btcpay-pills d-flex flex-wrap align-items-center justify-content-center gap-3">
                <template v-for="cat in allCategories">
                    <input :id="`Category-${cat.value}`" type="radio" name="category" autocomplete="off" v-model="displayCategory" :value="cat.value">
                    <label :for="`Category-${cat.value}`" class="btcpay-pill">{{ cat.text }}</label>
                </template>
            </div>
        </header>
        <main>
            <partial name="_StatusMessage" />
            @if (!string.IsNullOrEmpty(Model.Description))
            {
                <div class="lead">@Safe.Raw(Model.Description)</div>
            }
            <div ref="posItems" class="row row-cols row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 g-4" id="PosItems">
                @for (var index = 0; index < Model.Items.Length; index++)
                {
                    var item = Model.Items[index];
                    if (item.PriceType == ViewPointOfSaleViewModel.ItemPriceType.Topup)
                    {
                        continue;
                    }
                    var image = item.Image;
                    var description = item.Description;
                    var formatted = DisplayFormatter.Currency(item.Price ?? 0, Model.CurrencyCode, DisplayFormatter.CurrencyFormat.Symbol);
                    var inStock = !item.Inventory.HasValue || item.Inventory > 0;
                    <div class="col posItem" data-index="@index" data-search="@Safe.Raw(item.Title) @Safe.Raw(description)" data-categories="@(new JArray(item.Categories).ToString())">
                        <div class="card h-100 px-0">
                            @if (!string.IsNullOrWhiteSpace(image))
                            {
                                <img class="card-img-top" src="@image" alt="@Safe.Raw(item.Title)" asp-append-version="true">
                            }
                            <div class="card-body p-3 d-flex flex-column gap-2">
                                <h5 class="card-title m-0">@Safe.Raw(item.Title)</h5>
                                <div class="d-flex gap-2 align-items-center">
                                    <span class="fw-semibold">
                                        @switch (item.PriceType)
                                        {
                                            case ViewPointOfSaleViewModel.ItemPriceType.Topup:
                                                <span>Any amount</span>
                                                break;
                                            case ViewPointOfSaleViewModel.ItemPriceType.Minimum:
                                                <span>@formatted minimum</span>
                                                break;
                                            case ViewPointOfSaleViewModel.ItemPriceType.Fixed:
                                                @formatted
                                                break;
                                            default:
                                                throw new ArgumentOutOfRangeException();
                                        }
                                    </span>
                                    @if (item.Inventory.HasValue)
                                    {
                                        <span class="badge text-bg-light">
                                            @(item.Inventory > 0 ? $"{item.Inventory} left" : "Sold out")
                                        </span>
                                    }
                                </div>
                                @if (!string.IsNullOrWhiteSpace(description))
                                {
                                    <p class="card-text">@Safe.Raw(description)</p>
                                }
                            </div>
                            <div class="card-footer bg-transparent border-0 pt-0 pb-3">
                                @if (inStock)
                                {
                                    <button type="button" class="btn btn-primary w-100" v-on:click="addToCart(@index)" :disabled="!inStock(@index)">
                                        @{
                                            var buttonText = string.IsNullOrEmpty(item.BuyButtonText) ? item.PriceType == ViewPointOfSaleViewModel.ItemPriceType.Topup ? Model.CustomButtonText : Model.ButtonText : item.BuyButtonText;
                                            if (item.PriceType != ViewPointOfSaleViewModel.ItemPriceType.Topup)
                                            {
                                                buttonText = buttonText.Replace("{0}", formatted)?.Replace("{Price}", formatted);
                                            }
                                        }
                                        @Safe.Raw(buttonText)
                                    </button>
                                }                                
                            </div>
                        </div>
                    </div>
                }
            </div>
        </main>
        <footer class="store-footer">
            <a class="store-powered-by" href="https://btcpayserver.org" target="_blank" rel="noreferrer noopener">
                Powered by <partial name="_StoreFooterLogo" />
            </a>
        </footer>
    </div>
    <aside id="cart" class="offcanvas offcanvas-end" tabindex="-1" aria-labelledby="cartLabel">
        <div class="public-page-wrap pt-3 pt-lg-4 container-xl">
            <div class="offcanvas-header py-0 d-flex align-items-center justify-content-center gap-3 pe-5 position-relative">
                <h1 class="mb-0" id="cartLabel">Cart</h1>
                <button id="CartClose" type="button" class="cart-toggle-btn" data-bs-dismiss="offcanvas" aria-label="Close">
                    <vc:icon symbol="close" />
                </button>
            </div>
            <div class="offcanvas-body py-0">
                <table class="table table-borderless mt-0 mb-0 mx-auto" style="max-width:34rem" v-if="cartCount !== 0">
                    <thead>
                    <tr>
                        <th>Product</th>
                        <th class="text-end">Quantity</th>
                        <th class="text-end">Price</th>
                    </tr>
                    </thead>
                    <tbody id="CartItems">
                    <tr v-for="item in cart" :key="item.id">
                        <td class="align-middle fw-semibold">{{ item.title }}</td>
                        <td class="align-middle">
                            <div class="input-group input-group-sm w-125px pull-right">
                                <input class="form-control" type="number" name="count" placeholder="Qty" min="1" step="1" :max="item.inventory" v-model.number="item.count">
                                <button type="button" v-on:click="removeFromCart(item.id)" class="btn btn-outline-secondary">
                                    <vc:icon symbol="remove" />
                                </button>
                            </div>
                        </td>
                        <td class="align-middle text-end">{{ formatCurrency(item.price , true) }}</td>
                    </tr>
                    </tbody>
                    <tbody v-if="showDiscount || enableTips">
                    <tr v-if="showDiscount">
                        <th class="align-middle" :class="{ 'py-4': !enableTips, 'pt-4': enableTips }">Discount</th>
                        <th class="align-middle" :class="{ 'py-4': !enableTips, 'pt-4': enableTips }" colspan="3">
                            <div class="input-group input-group-sm w-125px pull-right">
                                <input class="form-control" type="number" name="discount" min="0" step="1" max="100" id="Discount" v-model.number="discountPercent">
                                <span class="input-group-text">%</span>
                            </div>
                        </th>
                    </tr>
                    <tr v-if="enableTips">
                        <th class="align-middle" :class="{ 'py-4': !showDiscount, 'pb-4': showDiscount }">Tip</th>
                        <th class="align-middle" :class="{ 'py-4': !showDiscount, 'pb-4': showDiscount }" colspan="3">
                            <div class="btcpay-pills d-flex flex-wrap align-items-center justify-content-end gap-2" v-if="customTipPercentages">
                                <div class="btcpay-pill d-flex align-items-center px-3" id="Tip-Custom" :class="{ active: !tipPercent && tip }" v-on:click.prevent="tipPercent = null">
                                    <input
                                        v-model.number="tip"
                                        class="form-control w-50px d-block bg-transparent border-0 p-0 me-1 fw-semibold"
                                        style="height:1.5em;min-height:auto;"
                                        type="number"
                                        min="0"
                                        step="@Model.Step"
                                        name="tip" />
                                    <span>@(Model.CurrencyInfo.CurrencySymbol ?? Model.CurrencyCode)</span>
                                </div>
                                <button
                                    v-for="percentage in customTipPercentages"
                                    type="button"
                                    class="btcpay-pill px-3"
                                    :class="{ active: tipPercent == percentage }"
                                    :id="`Tip-${percentage}`"
                                    v-on:click.prevent="tipPercentage(percentage)">
                                    {{ percentage }}%
                                </button>
                            </div>
                        </th>
                    </tr>
                    </tbody>
                    <tfoot class="table-group-divider">
                    <tr>
                        <td colspan="1" class="pt-4 align-middle">Subtotal</td>
                        <td colspan="2" class="pt-4 align-middle text-end" id="CartAmount">{{ formatCurrency(amountNumeric, true) }}</td>
                    </tr>
                    <tr v-if="discountNumeric">
                        <td colspan="1" class="align-middle">Discount</td>
                        <td colspan="2" class="align-middle text-end" id="CartDiscount">
                            <span v-if="discountPercent">{{discountPercent}}% =</span>
                            {{ formatCurrency(discountNumeric, true) }}
                        </td>
                    </tr>
                    <tr v-if="tipNumeric">
                        <td colspan="1" class="align-middle">Tip</td>
                        <td colspan="2" class="align-middle text-end" id="CartTip">
                            <span v-if="tipPercent">{{tipPercent}}% =</span>
                            {{ formatCurrency(tipNumeric, true) }}
                        </td>
                    </tr>
                    <tr>
                        <td colspan="1" class="align-middle h5 border-0">Total</td>
                        <td colspan="2" class="align-middle h5 border-0 text-end" id="CartTotal">{{ formatCurrency(totalNumeric, true) }}</td>
                    </tr>
                    <tr>
                        <td colspan="3" class="pt-4">
                            <form method="post" asp-action="ViewPointOfSale" asp-route-appId="@Model.AppId" asp-antiforgery="false" v-on:submit="handleFormSubmit">
                                <input type="hidden" name="amount" :value="totalNumeric">
                                <input type="hidden" name="tip" :value="tipNumeric">
                                <input type="hidden" name="discount" :value="discountPercentNumeric">
                                <input type="hidden" name="posdata" :value="posdata">
                                <button id="CartSubmit" class="btn btn-primary btn-lg w-100" type="submit">
                                    <div v-if="payButtonLoading" class="spinner-border spinner-border-sm" id="pay-button-spinner" role="status">
                                        <span class="sr-only">Loading...</span>
                                    </div>
                                    <template v-else>@Model.CustomButtonText</template>
                                </button>
                            </form>
                            <button id="CartClear" type="reset" v-on:click="clearCart" class="btn btn-outline-secondary w-100 mt-4" data-bs-dismiss="offcanvas">
                                Empty cart
                            </button>
                        </td>
                    </tr>
                    </tfoot>
                </table>
                <p id="CartItems" v-else class="text-muted text-center my-0">There are no items in your cart yet.</p>
            </div>
        </div>
    </aside>
</div>

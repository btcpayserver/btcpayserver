@using BTCPayServer.Plugins.PointOfSale.Models
@model BTCPayServer.Plugins.PointOfSale.Models.ViewPointOfSaleViewModel
@{
    Layout = "PointOfSale/Public/_Layout";
    var anyInventoryItems = Model.Items.Any(item => item.Inventory.HasValue);
}

<div class="container public-page-wrap flex-column">
    <partial name="_StatusMessage" />
    <partial name="_StoreHeader" model="(string.IsNullOrEmpty(Model.Title) ? Model.StoreName : Model.Title, Model.LogoFileId)" />
    @if (!string.IsNullOrEmpty(Model.Description))
    {
        <div class="lead text-center">@Safe.Raw(Model.Description)</div>
    }
    <main class="flex-grow-1 justify-content-center align-self-center text-center mx-auto py-3">
        <div class="card-deck mx-auto">
            @for (var x = 0; x < Model.Items.Length; x++)
            {
                var item = Model.Items[x];
                var buttonText = string.IsNullOrEmpty(item.BuyButtonText) ? item.Price.Type != ViewPointOfSaleViewModel.Item.ItemPrice.ItemPriceType.Fixed ? Model.CustomButtonText : Model.ButtonText : item.BuyButtonText;
                buttonText = buttonText.Replace("{0}", item.Price.Formatted).Replace("{Price}", item.Price.Formatted);

                <div class="card px-0" data-id="@x">
                    @if (!string.IsNullOrWhiteSpace(item.Image))
                    {
                        <img class="card-img-top" src="@item.Image" alt="Card image cap" asp-append-version="true">
                    }
                    @{CardBody(item.Title, item.Description);}
                    <div class="card-footer bg-transparent border-0 pb-3">
                        @if (!item.Inventory.HasValue || item.Inventory.Value > 0)
                        {
                            @if (item.Price.Type != ViewPointOfSaleViewModel.Item.ItemPrice.ItemPriceType.Topup)
                            {
                                <form method="post" asp-action="ViewPointOfSale" asp-route-appId="@Model.AppId" asp-antiforgery="false" data-buy>
                                    <input type="hidden" name="choicekey" value="@item.Id" />
                                    @{PayFormInputContent(item.BuyButtonText ?? Model.CustomButtonText, item.Price.Type, item.Price.Value, item.Price.Value);}
                                </form>
                            }
                            else
                            {
                                <form method="post" asp-action="ViewPointOfSale" asp-route-appId="@Model.AppId" asp-antiforgery="false">
                                    <input type="hidden" name="requiresRefundEmail" value="@Model.RequiresRefundEmail.ToString()" />
                                    <button type="submit" name="choiceKey" class="js-add-cart btn btn-primary" value="@item.Id">
                                        @Safe.Raw(buttonText)
                                    </button>
                                </form>
                            }
                        }
                        @if (item.Inventory.HasValue)
                        {
                            <div class="w-100 pt-2 text-center text-muted">
                                @if (item.Inventory > 0)
                                {
                                    <span>@item.Inventory left</span>
                                }
                                else
                                {
                                    <span>Sold out</span>
                                }
                            </div>
                        }
                        else if (anyInventoryItems)
                        {
                            <div class="w-100 pt-2">&nbsp;</div>
                        }
                    </div>
                </div>
            }
            @if (Model.ShowCustomAmount)
            {
                <div class="card px-0">
                    @{CardBody("Custom Amount", "Create invoice to pay custom amount");}
                    <div class="card-footer bg-transparent border-0 pb-3">
                        <form method="post" asp-action="ViewPointOfSale" asp-route-appId="@Model.AppId" asp-antiforgery="false" data-buy>
                            @{PayFormInputContent(Model.CustomButtonText, ViewPointOfSaleViewModel.Item.ItemPrice.ItemPriceType.Minimum);}
                        </form>
                        @if (anyInventoryItems)
                        {
                            <div class="w-100 pt-2">&nbsp;</div>
                        }
                    </div>
                </div>
            }
        </div>
    </main>
    <footer class="store-footer">
        <a href="https://btcpayserver.org" target="_blank" rel="noreferrer noopener">
            Powered by <partial name="_StoreFooterLogo" />
        </a>
    </footer>
</div>

@functions {
    private void PayFormInputContent(string buttonText,ViewPointOfSaleViewModel.Item.ItemPrice.ItemPriceType itemPriceType, decimal? minPriceValue = null, decimal? priceValue = null)
    {
        if (itemPriceType == ViewPointOfSaleViewModel.Item.ItemPrice.ItemPriceType.Fixed && priceValue == 0)
        {
            <div class="input-group  ">
                <input class="form-control" type="text" readonly  value="Free"/>
                <button class="btn btn-primary text-nowrap" type="submit">@buttonText</button>
            </div>
        }
        else
        {
            <div class="input-group">
                <span class="input-group-text">@Model.CurrencySymbol</span>
                <input type="hidden" name="requiresRefundEmail" value="@Model.RequiresRefundEmail.ToString()" />
                <input class="form-control" type="number" min="@(minPriceValue ?? 0)" step="@Model.Step" name="amount" placeholder="Amount" value="@priceValue" readonly="@(itemPriceType == ViewPointOfSaleViewModel.Item.ItemPrice.ItemPriceType.Fixed)">
                <button class="btn btn-primary text-nowrap" type="submit">@buttonText</button>
            </div>
        }
    }

    private void CardBody(string title, string description)
    {
        <div class="card-body my-auto pb-0">
            <h5 class="card-title">@title</h5>
            @if (!string.IsNullOrWhiteSpace(description))
            {
                <p class="card-text">@Safe.Raw(description)</p>
            }
        </div>
    }
}

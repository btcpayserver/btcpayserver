@model LightningNodeViewModel
@{
    Layout = "../Shared/_NavLayout.cshtml";
    ViewData["Title"] = "Add lightning node (Experimental)";
    ViewData.AddActivePage(BTCPayServer.Views.Stores.StoreNavPages.Index);
}

<h4>@ViewData["Title"]</h4>
@Html.Partial("_StatusMessage", Model.StatusMessage)
<div class="row">
    <div class="col-md-6">
        <div asp-validation-summary="All" class="text-danger"></div>
    </div>
</div>

<div class="alert alert-warning alert-dismissible" role="alert">
    <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
    <p>
        <span>A connection to a lightning charge node is required to generate lignting network enabled invoices. <br /></span>
        <span>This is experimental and not advised for production so keep in mind:</span>
    </p>
    <ul>
        <li>You might lose your money</li>
        <li>The devs of BTCPay Server don't know what they are doing and won't be able to help you if shit hit the fan</li>
        <li>You approve being #reckless and being the sole responsible party for your loss</li>
        <li>BTCPay Server relies on a <a href="https://github.com/ElementsProject/lightning-charge">Lightning Charge</a> node</li>
        <li>If you have no idea what above mean, search by yourself</li>
        <li>If you still have no idea how to use lightning, give up for now, we'll make it easier later</li>
    </ul>
</div>
<div class="row">
    <div class="col-md-8">
        <form method="post">
            <div class="form-group">
                <h5>Lightning node url</h5>
                <span>This URL should point to an installed lightning charge server</span>
            </div>
            <div class="form-group">
                <label asp-for="CryptoCurrency"></label>
                <select asp-for="CryptoCurrency" asp-items="Model.CryptoCurrencies" class="form-control"></select>
            </div>

            <div class="form-group">
                <label asp-for="Url"></label>
                <input id="lightningurl" asp-for="Url" class="form-control" />
                <span asp-validation-for="Url" class="text-danger"></span>
                @if(Model.InternalLightningNode != null)
                {
                    <p class="form-text text-muted">
                        You can use the internal lightning node by <a href="#" onclick="$('#lightningurl').val('@Model.InternalLightningNode'); return false;">clicking here</a>
                    </p>
                }
            </div>
            <button name="command" type="submit" value="save" class="btn btn-success">Submit</button>
            <button name="command" type="submit" value="test" class="btn btn-info">Test connection</button>
        </form>
    </div>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
}

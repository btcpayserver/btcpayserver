@model WalletSetupViewModel
@addTagHelper *, BundlerMinifier.TagHelpers
@{
    var isHotWallet = Model.Method == WalletSetupMethod.HotWallet;
    var type = isHotWallet ? "Hot" : "Watch-Only";
    Layout = "_LayoutWalletSetup";
    ViewData["Title"] = $"Create {Model.CryptoCode} {type} Wallet";
}

@section Navbar {
    <a asp-controller="Stores" asp-action="GenerateWallet" asp-route-storeId="@Model.StoreId" asp-route-cryptoCode="@Model.CryptoCode" asp-route-method="">
        <vc:icon symbol="back" />
    </a>
}

<h1 class="text-center">@ViewData["Title"]</h1>
<br>

@if (!isHotWallet || Model.CanUseHotWallet)
{
    ViewData.Add(nameof(Model.CanUseRPCImport), Model.CanUseRPCImport);
    ViewData.Add(nameof(Model.Method), Model.Method);

    @await Html.PartialAsync("_GenerateWalletForm", Model.SetupRequest)
}
else
{
    <p class="mb-0">Please note that creating a wallet is not supported by your instance.</p>
}

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
}

@model EditWebhookViewModel
@using  BTCPayServer.Client.Models;
@{
    Layout = "../Shared/_NavLayout.cshtml";
    ViewData.SetActivePageAndTitle(StoreNavPages.Webhooks, "Webhook Settings", Context.GetStoreData().StoreName);
}

<div class="row">
    <div class="col-lg-8">
        <form method="post">
            <h4 class="mb-3">@ViewData["PageTitle"]</h4>
            <div class="form-group">
                <label asp-for="PayloadUrl">Payload URL</label>
                <input asp-for="PayloadUrl" class="form-control" />
                <span asp-validation-for="PayloadUrl" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Secret"></label>
                <div class="input-group">
                    <input asp-for="Secret" type="password" class="form-control" value="@Model.Secret" data-toggle="password">
                    <div class="input-group-append">
                        <span class="input-group-text">
                            <i class="fa fa-eye"></i>
                        </span>
                    </div>
                </div>
                <p class="text-muted small form-text">The endpoint receiving the payload must validate the payload by checking that the HTTP header <code>BTCPAY-SIG</code> of the callback matches the HMAC256 of the secret on the payload's body bytes.</p>
            </div>
            <div class="form-group">
                <div class="form-check">
                    <input asp-for="AutomaticRedelivery" type="checkbox" class="form-check-input" />
                    <label asp-for="AutomaticRedelivery" class="form-check-label">Automatic redelivery</label>
                    <p class="text-muted small form-text">We will try to redeliver any failed delivery after 10 seconds, 1 minutes and up to 6 times after 10 minutes</p>
                </div>
            </div>
            <div class="form-group mb-5">
                <div class="form-check">
                    <input asp-for="Active" type="checkbox" class="form-check-input" />
                    <label asp-for="Active" class="form-check-label">Is enabled</label>
                </div>
            </div>
            <h4 class="mb-3">Events</h4>
            <div class="form-group">
                <label asp-for="Everything">Which events would you like to trigger this webhook?</label>
                <select id="all-events" class="form-control" asp-for="Everything">
                    <option value="true">Send me everything</option>
                    <option value="false">Send specific events</option>
                </select>
            </div>
            <div id="event-selector" class="collapse">
                <ul class="list-group">
                    @foreach (var evt in new[]
{
                    ("A new invoice has been created", WebhookEventType.InvoiceCreated),
                    ("A new payment has been received", WebhookEventType.InvoiceReceivedPayment),
                    ("An invoice is processing", WebhookEventType.InvoiceProcessing),
                    ("An invoice has expired", WebhookEventType.InvoiceExpired),
                    ("An invoice has been settled", WebhookEventType.InvoiceSettled),
                    ("An invoice became invalid", WebhookEventType.InvoiceInvalid)
                    })
                    {
                        <li class="list-group-item ">
                            <div class="d-flex align-items-center">
                                <span class="d-flex align-items-center flex-fill mr-3">
                                    <label for="@evt.Item2" class="form-check-label">@evt.Item1</label>
                                </span>
                                <span class="d-flex align-items-center">
                                    <input name="Events" id="@evt.Item2" value="@evt.Item2" @(Model.Events.Contains(evt.Item2) ? "checked" : "") type="checkbox" class="form-check-input" />
                                </span>
                            </div>
                        </li>
                    }
                </ul>
            </div>
            @if (Model.IsNew)
            {
                <button name="add" type="submit" class="btn btn-primary mt-3 mb-5" value="New" id="New">Add webhook</button>
            }
            else
            {
                <button name="update" type="submit" class="btn btn-primary mt-3 mb-5" value="Save" id="Save">Update webhook</button>
            }
        </form>
        @if (!Model.IsNew && Model.Deliveries.Count > 0)
        {
            <h4 class="mb-3">Recent deliveries</h4>
            <ul class="list-group">
                @foreach (var delivery in Model.Deliveries)
                {
                    <li class="list-group-item ">
                        <form asp-action="RedeliverWebhook"
                              asp-route-storeId="@this.Context.GetRouteValue("storeId")"
                              asp-route-webhookId="@this.Context.GetRouteValue("webhookId")"
                              asp-route-deliveryId="@delivery.Id"
                              method="post">
                            <div class="d-flex align-items-center">
                                <span class="d-flex align-items-center flex-fill mr-3">
                                    @if (delivery.Success)
                                    {
                                        <span class="d-flex align-items-center fa fa-check text-success" title="Success"></span>
                                    }
                                    else
                                    {
                                        <span class="d-flex align-items-center fa fa-times text-danger" title="@delivery.ErrorMessage"></span>
                                    }
                                    <span class="ml-3">
                                        <a asp-action="WebhookDelivery"
                                           asp-route-storeId="@this.Context.GetRouteValue("storeId")"
                                           asp-route-webhookId="@this.Context.GetRouteValue("webhookId")"
                                           asp-route-deliveryId="@delivery.Id"
                                           class="btn btn-link delivery-content" target="_blank">
                                            @delivery.Id
                                        </a>
                                    </span>
                                </span>
                                <span class="d-flex align-items-center">
                                    <strong class="d-flex align-items-center text-muted small">
                                        @delivery.Time.ToBrowserDate()
                                    </strong>

                                    <button id="#redeliver-@delivery.Id"
                                            type="submit"
                                            class="btn btn-info py-1 ml-3 redeliver">
                                        Redeliver
                                    </button>
                                </span>
                            </div>
                        </form>
                    </li>
                }
            </ul>
        }
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script type="text/javascript">
        function toggleEventSelector() {
            if ($("#all-events").val() === "true") {
                $("#event-selector").hide();
            }
            else {
                $("#event-selector").show();
            }
        }
        $(function () {
            toggleEventSelector();
            $("#all-events").change(function () {
                toggleEventSelector();
            });
        });
    </script>
}

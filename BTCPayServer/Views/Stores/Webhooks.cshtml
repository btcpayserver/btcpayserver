@model WebhooksViewModel
@{
    Layout = "../Shared/_NavLayout.cshtml";
    ViewData.SetActivePageAndTitle(StoreNavPages.Webhooks, "Webhooks", Context.GetStoreData().StoreName);
}

<div class="row">
    <div class="col-lg-8">
        <div class="d-flex align-items-center justify-content-between mb-3">
            <h4 class="mb-0">@ViewData["PageTitle"]</h4>
            <a id="CreateWebhook" asp-action="NewWebhook" class="btn btn-primary" role="button" asp-route-storeId="@Context.GetRouteValue("storeId")">
                <span class="fa fa-plus"></span>
                Create a new webhook
            </a>
        </div>
        <p>Webhooks allow BTCPay Server to send HTTP events related to your store to another server.</p>

        @if (Model.Webhooks.Any())
        {
            <table class="table table-sm table-responsive-md">
                <thead>
                <tr>
                    <th>Url</th>
                    <th class="text-right">Actions</th>
                </tr>
                </thead>
                <tbody>
                @foreach (var wh in Model.Webhooks)
                {
                    <tr>
                        <td class="text-truncate d-block" style="max-width:300px;">@wh.Url</td>
                        <td class="text-right">
                            <a asp-action="ModifyWebhook" asp-route-storeId="@this.Context.GetRouteValue("storeId")" asp-route-webhookId="@wh.Id">Modify</a> - <a asp-action="DeleteWebhook" asp-route-storeId="@this.Context.GetRouteValue("storeId")" asp-route-webhookId="@wh.Id">Delete</a>
                        </td>
                    </tr>
                }
                </tbody>
            </table>
        }
        else
        {
            <p class="text-secondary mt-3">
                There are no webhooks yet.
            </p>
        }
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}

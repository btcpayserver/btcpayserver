@using BTCPayServer.Views.Apps
@using BTCPayServer.Abstractions.Extensions
@using BTCPayServer.Abstractions.Custodians
@model BTCPayServer.Models.CustodianAccountViewModels.ViewCustodianAccountViewModel
@{
    ViewData.SetActivePage(AppsNavPages.Create, "Custodian account: " + @Model?.CustodianAccount.Name);
}

@section PageFootContent {
    <partial name="_ValidationScriptsPartial"/>
}

<style>
    .trade-qty label{display: block; }
</style>

<div id="custodianAccountView" v-cloak>
    <div class="sticky-header-setup"></div>
    <div class="sticky-header d-flex flex-wrap gap-3 align-items-center justify-content-between">
        <h2 class="mb-0">
            @ViewData["Title"]
        </h2>
        <div class="d-flex flex-wrap gap-3">
            <a class="btn btn-primary" role="button" v-if="account && account.canDeposit" v-on:click="openDepositModal()" href="#">
                <span class="fa fa-download"></span> Deposit
            </a>
            <a asp-action="EditCustodianAccount" asp-route-storeId="@Model.CustodianAccount.StoreId" asp-route-accountId="@Model.CustodianAccount.Id" class="btn btn-primary" role="button" id="EditCustodianAccountConfig">
                <span class="fa fa-gear"></span> Configure
            </a>
            <!--
            <button type="submit" class="btn btn-primary order-sm-1" id="SaveSettings">Save</button>
            <a class="btn btn-secondary" id="ViewApp" target="app_" href="/apps/MQ2sCVsmQ95JBZ4aZDtoSwMAnBY/pos">View</a>
            -->
        </div>
    </div>

    <partial name="_StatusMessage"/>

    <div class="row">
        <div class="col-xl-12">
            <div v-if="!account" class="loading d-flex justify-content-center p-3">
                <div class="spinner-border text-light" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
            </div>

            <div v-if="account">
                <p class="alert alert-danger" v-if="account.assetBalanceExceptionMessage">
                    {{ account.assetBalanceExceptionMessage }}
                </p>

                <h2>Balances</h2>
                <div class="table-responsive">
                    <table class="table table-hover table-responsive-md">
                        <thead>
                        <tr>
                            <th>Asset</th>
                            <th class="text-end">Balance</th>
                            <th class="text-end">Unit Price (Bid)</th>
                            <th class="text-end">Unit Price (Ask)</th>
                            <th class="text-end">Fiat Value</th>
                            <th class="text-end">Actions</th>
                        </tr>
                        </thead>
                        <tbody>
                        <tr v-for="row in sortedAssetRows" :key="row.asset">
                            <td>{{ row.asset }}</td>
                            <!-- TODO format as number? How? -->
                            <th class="text-end">{{ row.formattedQty }}</th>
                            <th class="text-end">
                                {{ row.formattedBid }}
                            </th>
                            <th class="text-end">
                                {{ row.formattedAsk }}
                            </th>
                            <th class="text-end">
                                {{ row.formattedFiatValue }}
                            </th>
                            <th class="text-end">
                                <a v-if="row.tradableAssetPairs" v-on:click="openTradeModal(row)" href="#">Trade</a>
                                <a v-if="row.canDeposit" v-on:click="openDepositModal(row)" href="#">Deposit</a>
                                <a v-if="row.canWithdraw" v-on:click="openWithdrawModal(row)" href="#">Withdraw</a>
                            </th>
                        </tr>
                        <tr v-if="account.assetBalances.length === 0">
                            <td colspan="999" class="text-center">No assets are stored with this custodian (yet).</td>
                        </tr>
                        <tr v-if="account.assetBalanceExceptionMessage !== null">
                            <td colspan="999" class="text-center">An error occured while loading assets and balances.</td>
                        </tr>
                        </tbody>
                    </table>
                </div>


                <h2>Features</h2>
                <p>The @Model?.Custodian.Name custodian supports:</p>
                <ul>
                    <li>Viewing asset account</li>
                    @if (Model?.Custodian is ICanTrade)
                    {
                        <li>Trading</li>
                    }
                    @if (Model?.Custodian is ICanDeposit)
                    {
                        <li>Depositing (Greenfield API only, for now)</li>
                    }
                    @if (Model?.Custodian is ICanWithdraw)
                    {
                        <li>Withdrawing (Greenfield API only, for now)</li>
                    }
                </ul>
            </div>
        </div>
    </div>


    <div class="modal" tabindex="-1" role="dialog" id="withdrawModal">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Withdraw</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">
                        <vc:icon symbol="close"/>
                    </button>
                </div>
                <div class="modal-body">
                    <p>Withdrawals are coming soon, but if you need this today, you can use our <a rel="noopener noreferrer" href="https://docs.btcpayserver.org/API/Greenfield/v1/" target="_blank">Greenfield API "Withdraw to store wallet" endpoint</a> to execute a withdrawal.</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal" tabindex="-1" role="dialog" id="depositModal">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Deposit</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">
                        <vc:icon symbol="close"/>
                    </button>
                </div>
                <div class="modal-body">
                    <p>Deposits are coming soon, but if you need this today, you can use our <a rel="noopener noreferrer" href="https://docs.btcpayserver.org/API/Greenfield/v1/" target="_blank">Greenfield API "Get a deposit address for custodian" endpoint</a> to get a deposit address to send your assets to.</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal" tabindex="-1" role="dialog" id="tradeModal" :data-bs-keyboard="!trade.isExecuting">
        <div class="modal-dialog" role="document">
            <form class="modal-content" v-on:submit="onTradeSubmit" method="post" asp-action="Trade" asp-route-accountId="@Model?.CustodianAccount?.Id" asp-route-storeId="@Model?.CustodianAccount?.StoreId">
                <div class="modal-header">
                    <h5 class="modal-title">Trade {{ trade.qty }} {{ trade.assetToTrade }} into {{ trade.assetToTradeInto }}</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" v-if="!trade.isExecuting">
                        <vc:icon symbol="close"/>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="loading d-flex justify-content-center p-3" v-if="trade.isExecuting">
                        <div class="spinner-border text-light" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                    </div>

                    <div v-if="!trade.isExecuting && trade.results === null">
                        <p v-if="trade.errorMsg" class="alert alert-danger">{{ trade.errorMsg }}</p>

                        <div class="row mb-2 trade-qty">
                            <div class="col-5">
                                <label class="form-label">
                                    Convert
                                    <div class="input-group">
                                        <input name="Qty" type="number" min="0" :max="trade.maxQtyToTrade" class="form-control" v-model="trade.qty"/>
                                        <select name="FromAsset" v-model="trade.assetToTrade" class="form-control">
                                            <option v-for="option in availableAssetsToTrade" v-bind:value="option">
                                                {{ option }}
                                            </option>
                                        </select>
                                    </div>
                                </label>
                            </div>
                            <div class="col-2 text-center">
                                &nbsp;
                                <br/>
                                <button type="button" class="btn btn-secondary" v-on:click="swapTradeAssets()" aria-label="Swap assets">
                                    <i class="fa fa-arrows-h" aria-hidden="true"></i>
                                </button>
                            </div>
                            <div class="col-5">
                                <label class="form-label">
                                    Into
                                    <div class="input-group">
                                        <input disabled="disabled" type="number" class="form-control" v-model="tradeQtyToReceive"/>
                                        <select name="ToAsset" v-model="trade.assetToTradeInto" class="form-control">
                                            <option v-for="option in availableAssetsToTradeInto" v-bind:value="option">
                                                {{ option }}
                                            </option>
                                        </select>
                                    </div>
                                </label>
                            </div>
                        </div>
                        <div>
                            <div class="btn-group" role="group" aria-label="Set qty to a percentage of holdings">
                                <button v-on:click="setTradeQtyPercent(10)" class="btn btn-secondary" type="button">10%</button>
                                <button v-on:click="setTradeQtyPercent(25)" class="btn btn-secondary" type="button">25%</button>
                                <button v-on:click="setTradeQtyPercent(50)" class="btn btn-secondary" type="button">50%</button>
                                <button v-on:click="setTradeQtyPercent(75)" class="btn btn-secondary" type="button">75%</button>
                                <button v-on:click="setTradeQtyPercent(90)" class="btn btn-secondary" type="button">90%</button>
                                <button v-on:click="setTradeQtyPercent(100)" class="btn btn-secondary" type="button">100%</button>
                            </div>
                        </div>

                        <p>
                            <br/>
                            1 {{ trade.assetToTradeInto }} = {{ trade.price }} {{ trade.assetToTrade }}
                            <br/>
                            1 {{ trade.assetToTrade }} = {{ 1 / trade.price }} {{ trade.assetToTradeInto }}
                        </p>
                        <p>
                            After the trade
                            {{ trade.maxQtyToTrade - trade.qty }} {{ trade.assetToTrade }} will remain in your account.
                        </p>
                        <small class="form-text text-muted">Final results may vary due to trading fees and slippage.</small>

                        <p>
                            <span v-if="trade.isUpdating">
                                Updating quote...
                            </span>
                            &nbsp;
                        </p>
                    </div>
                    <div v-if="trade.results !== null">
                        <p class="alert alert-success">Successfully traded {{ trade.results.fromAsset}} into {{ trade.results.toAsset}}.</p>
                        <table class="table table-striped">
                            <thead>
                            <tr>
                                <th colspan="2">Asset</th>
                                <th>Comment</th>
                            </tr>
                            </thead>
                            <tbody>
                            <tr v-for="entry in trade.results.ledgerEntries" v-bind:class="{ 'table-success': entry.qty > 0, 'table-danger': entry.qty < 0 }">
                                <td class="text-end"><span v-if="entry.qty > 0">+</span> {{ entry.qty }}</td>
                                <td>{{ entry.asset }}</td>
                                <td>
                                    <span v-if="entry.type !== 'Trade'">{{ entry.type}}</span>
                                </td>
                            </tr>
                            </tbody>
                        </table>
                        <p>Trade ID: {{ trade.results.tradeId }}</p>
                    </div>
                </div>
                <div class="modal-footer" v-if="!trade.isExecuting">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                        <span v-if="trade.results">Close</span>
                        <span v-if="!trade.results">Cancel</span>
                    </button>
                    <button v-if="canExecuteTrade" type="submit" class="btn btn-primary">Execute</button>
                </div>
            </form>
        </div>
    </div>
</div>

<script src="~/vendor/vuejs/vue.min.js" asp-append-version="true"></script>
<script type="text/javascript">
var ajaxBalanceUrl = "@Url.Action("ViewCustodianAccountAjax", "UICustodianAccounts", new { storeId = Model?.CustodianAccount.StoreId, accountId = Model?.CustodianAccount.Id })";
var ajaxTradePrepareUrl = "@Url.Action("GetTradePrepareAjax", "UICustodianAccounts", new { storeId = Model?.CustodianAccount.StoreId, accountId = Model?.CustodianAccount.Id })";
</script>
<script src="~/js/custodian-account.js" asp-append-version="true"></script>

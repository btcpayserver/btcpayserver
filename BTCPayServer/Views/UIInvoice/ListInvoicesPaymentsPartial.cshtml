@model (InvoiceDetailsModel Invoice, bool ShowAddress)
@{ var invoice = Model.Invoice; }

<div class="invoice-payments table-responsive">
    <table class="table table-hover mt-3 mb-4">
        <thead class="thead-inverse">
            <tr>
                <th class="text-nowrap">Payment method</th>
                @if (Model.ShowAddress)
                {
                    <th>Address</th>
                }
                <th class="text-end">Rate</th>
                <th class="text-end">Paid</th>
                <th class="text-end">Due</th>
                @if (invoice.Overpaid)
                {
                    <th class="text-end">Overpaid</th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var payment in invoice.CryptoPayments)
            {
                <tr>
                    <td class="text-nowrap">@payment.PaymentMethod</td>
                    @if (Model.ShowAddress)
                    {
                        <td title="@payment.Address">
                            <div class="text-truncate" style="max-width:400px" data-bs-toggle="tooltip" title="@payment.Address">@payment.Address</div>
                        </td>
                    }
                    <td class="text-nowrap text-end">@payment.Rate</td>
                    <td class="text-nowrap text-end">@payment.Paid</td>
                    <td class="text-nowrap text-end">@payment.Due</td>
                    @if (invoice.Overpaid)
                    {
                        <td class="text-nowrap text-end">@payment.Overpaid</td>
                    }
                </tr>
                var details = payment.PaymentMethodRaw.GetPaymentMethodDetails();
                var name = details.GetAdditionalDataPartialName();
                if (!string.IsNullOrEmpty(name))
                {
                    <partial name="@name" model="@details" />
                }
            }
        </tbody>
    </table>
    @{
        var grouped = invoice.Payments.GroupBy(payment => payment.GetPaymentMethodId()?.PaymentType).Where(entities => entities.Key != null);
    }
    @foreach (var paymentGroup in grouped)
    {
        <partial name="@paymentGroup.Key.InvoiceViewPaymentPartialName" model="@paymentGroup.ToList()" />
    }
</div>

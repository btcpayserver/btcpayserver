@using BTCPayServer.Client
@model BTCPayServer.Controllers.UIManageController.ApiKeyPermissionAnalyticsViewModel
@{
	var staleThresholdDays = 100;
	ViewData.SetActivePage(ManageNavPages.APIKeys, StringLocalizer["API Key analysis"]);
}

@section PageHeadContent {
	<style>
		.nav-tabs .nav-link.active {
		color: #212529 !important;
		}
	</style>
}

<div class="sticky-header">
	<nav aria-label="breadcrumb">
		<ol class="breadcrumb">
			<li class="breadcrumb-item">
				<a asp-action="APIKeys" text-translate="true">API Keys</a>
			</li>
			<li class="breadcrumb-item active" aria-current="page">@ViewData["Title"]</li>
		</ol>
		<h2>@ViewData["Title"]</h2>
	</nav>
	<a class="btn btn-primary" asp-action="EditAPIKey" asp-route-id="@Model.ApiKey" text-translate="true">Edit API Key</a>
</div>

<div class="row mb-4">
	<div class="col-md-4">
		<div class="card text-center">
			<div class="card-body">
				<h5 class="card-title text-primary">@Model.TotalPermissions</h5>
				<p class="card-text" text-translate="true">Total Permissions</p>
			</div>
		</div>
	</div>
	<div class="col-md-4">
		<div class="card text-center">
			<div class="card-body">
				<h5 class="card-title text-success">@Model.UsedPermissions.Count</h5>
				<p class="card-text" text-translate="true">Used Permissions</p>
			</div>
		</div>
	</div>
	<div class="col-md-4">
		<div class="card text-center">
			<div class="card-body">
				<h5 class="card-title text-warning">@Model.UnusedPermissions.Count</h5>
				<p class="card-text" text-translate="true">Unused Permissions</p>
			</div>
		</div>
	</div>
</div>


<div class="row">
	<div class="col-12">
		<div class="card">
			<div class="card-header">
				<ul class="nav nav-tabs card-header-tabs" id="permissionTabs" role="tablist">
					<li class="nav-item" role="presentation">
						<button class="nav-link active" id="all-tab" data-bs-toggle="tab" data-bs-target="#all-permissions" type="button" role="tab">
							@ViewLocalizer["All Permissions {0}", Model.AllPermissions.Count]
						</button>
					</li>
					<li class="nav-item" role="presentation">
						<button class="nav-link" id="used-tab" data-bs-toggle="tab" data-bs-target="#used-permissions" type="button" role="tab">
							@ViewLocalizer["Used Permissions {0}", Model.UsedPermissions.Count]
						</button>
					</li>
					<li class="nav-item" role="presentation">
						<button class="nav-link" id="unused-tab" data-bs-toggle="tab" data-bs-target="#unused-permissions" type="button" role="tab">
							@ViewLocalizer["Unused Permissions {0}", Model.UnusedPermissions.Count]
						</button>
					</li>
				</ul>
			</div>
			<div class="card-body">
				<div class="tab-content" id="permissionTabContent">
					<div class="tab-pane fade show active" id="all-permissions" role="tabpanel">
						@if (Model.AllPermissions.Any())
						{
							<div class="table-responsive">
								<table class="table table-hover">
									<thead class="table-light">
										<tr>
											<th text-translate="true">Permission</th>
											<th text-translate="true">Usage Count</th>
											<th text-translate="true">Last Used</th>
											<th text-translate="true">Status</th>
										</tr>
									</thead>
									<tbody>
										@foreach (var permission in Model.AllPermissions.OrderBy(p => p.Permission))
										{
											var usage = Model.UsedPermissions.FirstOrDefault(u => u.Permission == permission.Permission);
											var isUsed = usage != null;
											var isStale = isUsed && (DateTimeOffset.UtcNow - usage.LastUsed).TotalDays > staleThresholdDays;
											<tr class="@(isUsed ? "" : "table-light")">
												<td>
													<code>@permission.Permission</code>
												</td>
												<td>
													@if (isUsed)
													{
														<span class="badge bg-secondary">@usage.UsageCount.ToString("N0")</span>
													}
													else
													{
														<span class="text-muted">-</span>
													}
												</td>
												<td>
													@if (isUsed)
													{
														<span class="text-muted">@usage.LastUsed.ToTimeAgo()</span>
													}
													else
													{
														<span class="text-muted" text-translate="true">Never</span>
													}
												</td>
												<td>
													@if (!isUsed)
													{
														<span class="badge bg-secondary" text-translate="true">Never Used</span>
													}
													else if (isStale)
													{
														<span class="badge bg-warning" text-translate="true">Stale</span>
													}
													else
													{
														<span class="badge bg-info" text-translate="true">Active</span>
													}
												</td>
											</tr>
										}
									</tbody>
								</table>
							</div>
						}
						else
						{
							<div class="text-center py-5">
								<h5 class="mt-3" text-translate="true">No Permission Usage Recorded</h5>
							</div>
						}
					</div>

					<div class="tab-pane fade" id="used-permissions" role="tabpanel">
						@if (Model.UsedPermissions.Any())
						{
							<div class="table-responsive">
								<table class="table table-hover">
									<thead class="table-light">
										<tr>
											<th text-translate="true">Permission</th>
											<th text-translate="true">Usage Count</th>
											<th text-translate="true">Last Used</th>
											<th text-translate="true">Status</th>
										</tr>
									</thead>
									<tbody>
										@foreach (var permission in Model.UsedPermissions.OrderByDescending(p => p.LastUsed))
										{
											var isStale = (DateTimeOffset.UtcNow - permission.LastUsed).TotalDays > staleThresholdDays;
											<tr>
												<td>
													<code>@permission.Permission</code>
												</td>
												<td>
													<span class="badge bg-secondary">@permission.UsageCount.ToString("N0")</span>
												</td>
												<td>
													<span class="text-muted">@permission.LastUsed.ToTimeAgo()</span>
												</td>
												<td>
													@if (isStale)
													{
														<span class="badge bg-warning" text-translate="true">Stale</span>
													}
													else
													{
														<span class="badge bg-info" text-translate="true">Active</span>
													}
												</td>
											</tr>
										}
									</tbody>
								</table>
							</div>
						}
						else
						{
							<div class="text-center py-5">
								<h5 class="mt-3" text-translate="true">No Permission Usage Recorded</h5>
							</div>
						}
					</div>

					<div class="tab-pane fade" id="unused-permissions" role="tabpanel">
						@if (Model.UnusedPermissions.Any())
						{
							<div class="alert alert-warning" role="alert">
								<i class="bi bi-exclamation-triangle"></i>
								<strong>Security Recommendation:</strong> Consider removing unused permissions to reduce security risk.
							</div>

							<div class="table-responsive">
								<table class="table table-hover">
									<thead class="table-light">
										<tr>
											<th text-translate="true">Permission</th>
											<th text-translate="true">Status</th>
										</tr>
									</thead>
									<tbody>
										@foreach (var permission in Model.UnusedPermissions.OrderBy(p => p))
										{
											<tr>
												<td>
													<code>@permission</code>
												</td>
												<td>
													<span class="badge bg-secondary" text-translate="true">Never Used</span>
												</td>
											</tr>
										}
									</tbody>
								</table>
							</div>
						}
						else
						{
							<div class="text-center py-5">
								<i class="bi bi-shield-check text-success" style="font-size: 3rem;"></i>
								@if (Model.TotalPermissions > 0)
								{
									<h5 class="mt-3 text-success" text-translate="true">No unused permission!</h5>
								}
								else
								{
									<h5 class="mt-3" text-translate="true">No Permission Usage Recorded</h5>
								}
							</div>
						}
					</div>
				</div>
			</div>
		</div>
	</div>
</div>

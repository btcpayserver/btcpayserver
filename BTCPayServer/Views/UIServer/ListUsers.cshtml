@using BTCPayServer.Abstractions.Models
@model UsersViewModel
@{
    ViewData.SetActivePage(ServerNavPages.Users);
    var nextUserEmailSortOrder = (string)ViewData["NextUserEmailSortOrder"];
    var userEmailSortOrder = nextUserEmailSortOrder switch
    {
        "asc" => "desc",
        "desc" => "asc",
        _ => null
    };

    var sortIconClass = "fa-sort";
    if (userEmailSortOrder != null)
    {
        sortIconClass = $"fa-sort-alpha-{userEmailSortOrder}";
    }

    const string sortByDesc = "Sort by descending...";
    const string sortByAsc = "Sort by ascending...";
}

<div class="d-flex align-items-center justify-content-between mb-3">
    <h3 class="mb-0">@ViewData["Title"]</h3>
    <a asp-action="CreateUser" class="btn btn-primary" role="button" id="CreateUser">
        Add User
    </a>
</div>

<form asp-action="ListUsers" asp-route-sortOrder="@(userEmailSortOrder)" style="max-width:640px" method="get">
    <input asp-for="SearchTerm" class="form-control" placeholder="Search by email..." />
</form>

<div class="table-responsive">
    <table class="table table-hover">
        <thead>
        <tr>
            <th>
                <a
                    asp-action="ListUsers"
                    asp-route-sortOrder="@(nextUserEmailSortOrder ?? "asc")"
                    class="text-nowrap"
                    title="@(nextUserEmailSortOrder == "desc" ? sortByAsc : sortByDesc)"
                >
                    Email
                    <span class="fa @(sortIconClass)"></span>
                </a>
            </th>
            <th>Created</th>
            <th class="text-center">Verified</th>
            <th class="text-center">Approved</th>
            <th class="text-center">Enabled</th>
            <th class="text-end">Actions</th>
        </tr>
        </thead>
        <tbody id="UsersList">
        @foreach (var user in Model.Users)
        {
            <tr>
                <td class="d-flex align-items-center gap-2">
                    <span class="user-email">@user.Email</span>
                    @foreach (var role in user.Roles)
                    {
                        <span class="badge bg-info">@Model.Roles[role]</span>
                    }
                </td>
                <td>@user.Created?.ToBrowserDate()</td>
                <td class="text-center">
                    @if (user.EmailConfirmed.HasValue)
                    {
                        <span class="user-email-confirmed fa @(user.EmailConfirmed.Value ? "fa-check text-success" : "fa-times text-danger")"></span>
                    }
                </td>
                <td class="text-center">
                    @if (user.Approved.HasValue)
                    {
                        <span class="user-approved fa @(user.Approved.Value ? "fa-check text-success" : "fa-times text-danger")"></span>
                    }
                </td>
                <td class="text-center">
                    @if (!user.Disabled)
                    {
                        <span class="user-enabled text-success fa fa-check" title="User is enabled"></span>
                    }
                    else
                    {
                        <span class="user-disabled text-danger fa fa-times" title="User is disabled"></span>
                    }
                </td>
                <td class="text-end">
                    @if (user is { EmailConfirmed: false, Disabled: false }) {
                        <a asp-action="SendVerificationEmail" asp-route-userId="@user.Id" data-bs-toggle="modal" data-bs-target="#ConfirmModal" data-description="This will send a verification email to <strong>@Html.Encode(user.Email)</strong>.">Resend verification email</a>
                        <span>-</span>
                    }
                    <a asp-action="User" asp-route-userId="@user.Id" class="user-edit">Edit</a> <span> - </span> <a asp-action="DeleteUser" asp-route-userId="@user.Id">Remove</a>
                    - <a asp-action="ToggleUser"
                         asp-route-enable="@user.Disabled"
                         asp-route-userId="@user.Id">
                        @(user.Disabled ? "Enable" : "Disable")
                    </a>
                </td>
            </tr>
        }
        </tbody>
    </table>
</div>

<vc:pager view-model="Model"></vc:pager>

<partial name="_Confirm" model="@(new ConfirmModel("Send verification email", $"This will send a verification email to the user.", "Send"))" />

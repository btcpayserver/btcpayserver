@using BTCPayServer.Plugins
@model BTCPayServer.Models.ServerViewModels.ListPluginsViewModel
@inject PluginService PluginService
@{
    ViewData.SetActivePage(ServerNavPages.Plugins, "Manage Plugins");
    var installed = Model.Installed.ToDictionary(plugin => plugin.Identifier, plugin => plugin.Version);

    var availablePluginsList = Model.Available
        .GroupBy(plugin => plugin.Identifier)
        .Select(group =>
        {
            var ordered = group.OrderByDescending(plugin => plugin.Version).ToArray();
            return ordered.FirstOrDefault(plugin => PluginManager.DependenciesMet(plugin.Dependencies, installed))
                   ?? ordered.First();
        })
        .ToList();

    bool DependentOn(string plugin)
    {
        foreach (var installedPlugin in Model.Installed)
        {
            if (installedPlugin.Dependencies.Any(dep => dep.Identifier.Equals(plugin, StringComparison.InvariantCultureIgnoreCase)))
            {
                return true;
            }
        }

        var pendingInstalls = Model.Commands.Where(tuple => tuple.command != "uninstall").Select(tuple => tuple.plugin).Distinct();
        foreach (var pendingInstall in pendingInstalls)
        {
            if (Model.Available.Any(availablePlugin => availablePlugin.Identifier.Equals(pendingInstall, StringComparison.InvariantCultureIgnoreCase) &&
                                                       availablePlugin.Dependencies.Any(dep => dep.Identifier.Equals(plugin, StringComparison.InvariantCultureIgnoreCase))))
            {
                return true;
            }
        }
        return false;
    }
}

<style>
    .version-switch .nav-link { display: inline; }
    .version-switch .nav-link.active { display: none; }
</style>

<div class="sticky-header">
    <h2>
        @ViewData["Title"]
        <a href="#descriptor" data-bs-toggle="collapse">
            <vc:icon symbol="info" />
        </a>
    </h2>
</div>


<div id="descriptor" class="collapse">
    <div class="d-flex px-4 py-4 mb-4 bg-tile rounded">
        <div class="flex-fill">
            <h5 class="alert-heading">Important notice about plugins</h5>
            <p class="mb-0">
                Plugins are developed by third parties. They need to be updated and maintained regularly in addition to BTCPay Server. Use plugins at your own risk.
                <a href="#warning-details" data-bs-toggle="collapse" class="alert-link">Read more</a>
            </p>
            <div class="collapse" id="warning-details">
                <p class="my-3"><strong>Use at Your Own Risk:</strong> Plugins in this store are developed by independent third parties. These plugins have not undergone review by the BTCPay Server team.</p>
                <p class="mb-3"><strong>Disclaimer of Responsibility:</strong> BTCPay Server contributors or Foundation are not liable for any harm, loss, or damage resulting from the installation or use of the plugins. Users assume full responsibility for their installation, use, familiarity with licensing and terms of service and maintenance.</p>
                <p class="mb-3"><strong>No Official Endorsement:</strong> Inclusion in the list of BTCPay Server plugins does not constitute an endorsement or guarantee of quality, safety, or compatibility.</p>
                <p class="mb-3"><strong>Due Diligence Advised:</strong> We recommend users exercise caution and conduct their own research or consult the community before installing any plugin.</p>
                <p class="mb-0"><strong>Feedback and Reporting:</strong> Should you experience issues with a plugin, please provide feedback or report concerns directly to the respective plugin developers.</p>
            </div>
        </div>
        <button type="button" class="btn-close ms-auto" data-bs-toggle="collapse" data-bs-target="#descriptor" aria-expanded="false" aria-label="Close">
            <vc:icon symbol="close" />
        </button>
    </div>
</div>

<partial name="_StatusMessage" />

@if (Model.Disabled.Any())
{
    <div class="alert alert-danger mb-2 d-flex align-items-center justify-content-between">
        Some plugins were disabled due to fatal errors. They may be incompatible with this version of BTCPay Server.
    </div>
}
@if (Model.Commands.Any())
{
    <div class="alert alert-info mb-4 d-flex align-items-center justify-content-between">
        You need to restart BTCPay Server in order to update your active plugins.
        @if (Model.CanShowRestart)
        {
            <form method="post" asp-action="Maintenance">
                <button type="submit" name="command" value="soft-restart" class="btn btn-info" asp-action="Maintenance">Restart now</button>
            </form>
        }
    </div>
}

@if (Model.Installed.Where(i => !i.SystemPlugin).Any())
{
    foreach (var plugin in Model.Installed.Where(i => !i.SystemPlugin))
    {
        Model.DownloadedPluginsByIdentifier.TryGetValue(plugin.Identifier, out var downloadInfo);
        var matchedAvailable = Model.Available.Where(availablePlugin => availablePlugin.Identifier == plugin.Identifier && availablePlugin.Version > plugin.Version).OrderByDescending(availablePlugin => availablePlugin.Version).ToArray();
        var x = matchedAvailable.FirstOrDefault(availablePlugin => PluginManager.DependenciesMet(availablePlugin.Dependencies, installed)) ?? matchedAvailable.FirstOrDefault();
        var updateAvailable = matchedAvailable.Any();
        var pendingAction = Model.Commands.LastOrDefault(tuple => tuple.plugin.Equals(plugin.Identifier, StringComparison.InvariantCultureIgnoreCase)).command;
        var exclusivePendingAction = true;
        var versionOfPendingInstall = PluginService.GetVersionOfPendingInstall(plugin.Identifier);
        <div class="card border-0 bg-transparent mb-2">
            <div class="card-body d-flex flex-md-row flex-column border-0">
                <div class="me-3 d-flex align-items-center">
                    <img src="@(!string.IsNullOrEmpty(downloadInfo?.PluginLogo) ? downloadInfo.PluginLogo : Url.Content("~/img/icons/icon-512x512.png"))"
                         alt="@plugin.Name Image"
                         class="rounded-4"
                         style="width: 80px; height: 80px;">
                </div>
                <div class="flex-grow-1 align-self-center my-2 my-md-0">
                    <div class="d-flex justify-content-between align-items-center mb-2">
                        <h4 class="card-title mb-0">@plugin.Name</h4>
                    </div>
                    <span>@plugin.Version</span> 
                    <p class="card-text">@plugin.Description</p>
                </div>
                <div class="d-flex flex-column gap-3 align-items-end">
                    @{
                        var pluginModalId = $"modal_{plugin.Identifier}";
                        var partialModel = new PluginPartialViewModel
                        {
                            ModalId = pluginModalId,
                            DownloadInfo = downloadInfo,
                            MatchedPlugin = x,
                            Plugin = availablePluginsList.FirstOrDefault(p => p.Identifier == plugin.Identifier),
                            UpdateAvailable = updateAvailable,
                            Commands = Model.Commands,
                            Available = Model.Available,
                            Installed = Model.Installed
                        };
                    }
                    @if (!Model.Commands.Any())
                    {
                        <button class="btn btn-outline-primary w-100" data-bs-toggle="modal" data-bs-target="#@pluginModalId">View</button>
                    }

                    <partial name="_ViewPluginModal" model="partialModel" />

                    @if (pendingAction is not null && updateAvailable)
                    {
                        var isUpdateAction = Model.Commands.Last(tuple => tuple.plugin.Equals(plugin.Identifier, StringComparison.InvariantCultureIgnoreCase)).command == "update";
                        if (isUpdateAction)
                        {
                            exclusivePendingAction = versionOfPendingInstall == x.Version;
                        }
                    }
                    @if (pendingAction is not null)
                    {
                        <form asp-action="CancelPluginCommands" asp-route-plugin="@plugin.Identifier" class="w-100">
                            <button type="submit" class="btn btn-outline-secondary  w-100">Cancel pending @pendingAction @(versionOfPendingInstall is null ? "" : $"of {versionOfPendingInstall}")</button>
                        </form>
                    }
                    @if (pendingAction is null || !exclusivePendingAction)
                    {
                        if (updateAvailable && x != null)
                        {
                            if (PluginManager.DependenciesMet(x.Dependencies, installed))
                            {
                                <form asp-action="InstallPlugin" asp-route-plugin="@plugin.Identifier" asp-route-version="@x.Version" asp-route-update="true" class="me-3 w-100">
                                    <button type="submit" class="btn btn-secondary  w-100">Update</button>
                                </form>
                            }
                            else
                            {
                                <form asp-action="InstallPlugin" asp-route-plugin="@plugin.Identifier" asp-route-version="@x.Version" asp-route-update="true" class="me-3 w-100">
                                    <button title="Schedule upgrade for when the dependencies have been met to ensure a smooth update" data-bs-toggle="tooltip" type="submit" class="btn btn-secondary  w-100">Schedule update</button>
                                </form>
                            }
                        }
                        if (DependentOn(plugin.Identifier))
                        {
                            <button type="button" class="btn btn-outline-danger w-100" data-bs-toggle="tooltip" title="This plugin cannot be uninstalled as it is depended on by other plugins.">
                                Uninstall <vc:icon symbol="warning" />
                            </button>
                        }
                        else
                        {
                            <form asp-action="UnInstallPlugin" asp-route-plugin="@plugin.Identifier" class="w-100">
                                <button type="submit" class="btn btn-outline-danger w-100">Uninstall</button>
                            </form>
                        }
                    }
                </div>
            </div>
        </div>
    }
}
else
{
    <div class="alert alert-warning alert-dismissible mb-4" role="alert">
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close">
            <vc:icon symbol="close" />
        </button>
        <p>
            It looks like you haven't installed any plugins yet.
            <a asp-action="ExplorePlugins" class="alert-link">
                Explore our plugin marketplace and start customizing your BTCPay Server experience today!
            </a>
        </p>
    </div>
}


@if (Model.Commands.Any() || Model.Disabled.Any())
{
    var showHeaderTitle = Model.Disabled.Any() || Model.Commands.Any(cmd =>
    {
        var lastCommand = cmd.command.ToLower();
        return lastCommand is not ("delete" or "update");
    });
    <div class="my-5">
        @if (showHeaderTitle)
        {
            <h3>Pending Actions</h3>
        }
        <div class="row" id="pending-actions">
            @if (Model.Commands.Any())
            {
                @foreach (var extComm in Model.Commands.GroupBy(tuple => tuple.plugin))
                {
                    var lastCommand = extComm.Last().command.ToLower();
                    if (lastCommand is not ("delete" or "update"))
                    {
                        <div class="card border-0  bg-transparent mb-2">
                            <div class="card-body d-flex flex-md-row flex-column border-0">
                                <div class="flex-grow-1 align-self-start my-2 my-md-0">
                                    <div class="d-flex justify-content-between align-items-center mb-2">
                                        <h4 class="card-title mb-0 text-wrap">
                                            @(Model.Available.FirstOrDefault(c => c.Identifier == extComm.Key)?.Name ?? extComm.Key)
                                        </h4>
                                    </div>
                                </div>
                                <div class="d-flex flex-column gap-3 align-items-end">
                                    <form asp-action="CancelPluginCommands" asp-route-plugin="@extComm.Key" class="w-100 w-md-auto">
                                        <button type="submit" class="btn btn-outline-secondary w-100 w-md-auto">Cancel pending @lastCommand</button>
                                    </form>
                                </div>
                            </div>
                        </div>
                    }
                }
            }

            @if (Model.Disabled.Any())
            {
                @foreach (var (plugin, version) in Model.Disabled)
                {
                    <div class="card border-0 bg-transparent mb-2">
                        <div class="card-body d-flex flex-md-row flex-column border-0">
                            <div class="flex-grow-1 align-self-start my-2 my-md-0">
                                <div class="d-flex justify-content-between align-items-center mb-2">
                                    <h4 class="card-title mb-0 text-wrap">@plugin</h4>
                                    @if (version != null)
                                    {
                                        <span class="ms-3">(@version)</span>
                                    }
                                </div>
                            </div>
                            <div class="d-flex flex-column gap-3 align-items-end">
                                <form asp-action="UnInstallPlugin" asp-route-plugin="@plugin" class="w-100 w-md-auto">
                                    <button type="submit" class="btn btn-sm btn-outline-danger w-100 w-md-auto">Uninstall</button>
                                </form>
                            </div>
                        </div>
                    </div>
                }
            }
        </div>
    </div>
}

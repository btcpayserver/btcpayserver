@model UsersViewModel.UserViewModel
@{
    ViewData.SetActivePage(ServerNavPages.Users, Model.Email);
}

<form method="post">
    <div class="sticky-header">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item">
                    <a asp-action="ListUsers">Users</a>
                </li>
                <li class="breadcrumb-item active" aria-current="page">User</li>
            </ol>
            <h2>@ViewData["Title"]</h2>
        </nav>         
        <button name="command" type="submit" class="btn btn-primary" value="Save" id="SaveUser">Save</button>
    </div>
    <partial name="_StatusMessage" />
    <div class="form-check">
        <input asp-for="IsAdmin" type="checkbox" class="form-check-input" />
        <label asp-for="IsAdmin" class="form-check-label">User is admin</label>
    </div>
    @if (Model.Approved.HasValue)
    {
        <div class="form-check">
            <input id="Approved" name="Approved" type="checkbox" value="true" class="form-check-input" @(Model.Approved.Value ? "checked" : "") />
            <label for="Approved" class="form-check-label">User is approved</label>
        </div>
        <input name="Approved" type="hidden" value="false">
    }
    @if (Model.EmailConfirmed.HasValue)
    {
        <div class="form-check">
            <input id="EmailConfirmed" name="EmailConfirmed" value="true" type="checkbox" class="form-check-input" @(Model.EmailConfirmed.Value ? "checked" : "") />
            <label for="EmailConfirmed" class="form-check-label">Email address is confirmed</label>
        </div>
        <input name="EmailConfirmed" type="hidden" value="false">
    }
</form>

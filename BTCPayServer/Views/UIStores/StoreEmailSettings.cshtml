@model BTCPayServer.Models.ServerViewModels.EmailsViewModel
@{
    Layout = "../Shared/_NavLayout.cshtml";
    ViewData.SetActivePage(StoreNavPages.Emails, "Emails", Context.GetStoreData().Id);
    var hasCustomSettings = Model.IsSetup() && !Model.UsesFallback();
}

<div class="row mb-4">
    <div class="col-xl-10 col-xxl-constrain">
        <div class="d-flex flex-wrap gap-3 align-items-center justify-content-between mt-n1 mb-4">
            <h3 class="mb-0">Email Rules</h3>
            <a class="btn btn-secondary" asp-action="StoreEmails" asp-controller="UIStores" asp-route-storeId="@Context.GetStoreData().Id" id="ConfigureEmailRules">
                Configure
            </a>
        </div>
        <p>
            <a asp-action="StoreEmails" asp-controller="UIStores" asp-route-storeId="@Context.GetStoreData().Id">Email rules</a>
            allow BTCPay Server to send customized emails from your store based on events.
        </p>
    </div>
</div>

<h3 class="mb-4">Email Server</h3>
@if (Model.IsFallbackSetup())
{
    <label class="d-flex align-items-center mb-4">
        <input type="checkbox" id="UseCustomSMTP" checked="@hasCustomSettings" class="btcpay-toggle me-3" data-bs-toggle="collapse" data-bs-target="#SmtpSettings" aria-expanded="@hasCustomSettings" aria-controls="SmtpSettings" />
        <div>
            <span>Use custom SMTP settings for this store</span>
            <div class="form-text">Otherwise, the server's SMTP settings will be used to send emails.</div>
        </div>
    </label>

    <div class="checkout-settings collapse @(hasCustomSettings ? "show" : "")" id="SmtpSettings">
        <partial name="EmailsBody" model="Model" />
    </div>
}
else
{
    <partial name="EmailsBody" model="Model" />
}

@section PageFootContent {
    <partial name="_ValidationScriptsPartial" />
}

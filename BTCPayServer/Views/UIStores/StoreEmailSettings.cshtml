@using BTCPayServer.Client
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model BTCPayServer.Models.EmailsViewModel
@{
    var storeId = Context.GetStoreData().Id;
    var hasCustomSettings = (Model.IsSetup() && !Model.UsesFallback()) || ViewBag.UseCustomSMTP ?? false;
    ViewData.SetActivePage(StoreNavPages.Emails, "Email Rules", storeId);
}

<div class="row">
    <div class="col-xl-10 col-xxl-constrain">
        <div class="d-flex flex-wrap gap-3 align-items-center justify-content-between mt-n1 mb-2 mb-lg-3">
            <h3 class="mb-0">Email Rules</h3>
            <a class="btn btn-secondary" asp-action="StoreEmails" asp-controller="UIStores" asp-route-storeId="@storeId" id="ConfigureEmailRules" permission="@Policies.CanModifyStoreSettings">
                Configure
            </a>
        </div>
        <partial name="_StatusMessage" />
        <p permission="@Policies.CanModifyStoreSettings">
            <a asp-action="StoreEmails" asp-controller="UIStores" asp-route-storeId="@storeId">Email rules</a>
            allow BTCPay Server to send customized emails from your store based on events.
        </p>
    </div>
</div>

<h3 class="my-3">Email Server</h3>
<form method="post" autocomplete="off" permissioned="@Policies.CanModifyStoreSettings">
    @if (Model.IsFallbackSetup())
    {
        <label class="d-flex align-items-center mb-4">
            <input type="checkbox" id="UseCustomSMTP" name="UseCustomSMTP" value="true" checked="@hasCustomSettings" class="btcpay-toggle me-3" data-bs-toggle="collapse" data-bs-target="#SmtpSettings" aria-expanded="@hasCustomSettings" aria-controls="SmtpSettings" />
            <div>
                <span>Use custom SMTP settings for this store</span>
                <div class="form-text">Otherwise, the server's SMTP settings will be used to send emails.</div>
            </div>
        </label>

        <div class="collapse @(hasCustomSettings ? "show" : "")" id="SmtpSettings">
            <partial name="EmailsBody" model="Model" />
        </div>
    }
    else
    {
        <partial name="EmailsBody" model="Model" />
    }

    <partial name="EmailsTest" model="Model" permission="@Policies.CanModifyStoreSettings" />
</form>

@section PageFootContent {
    <partial name="_ValidationScriptsPartial" />
}

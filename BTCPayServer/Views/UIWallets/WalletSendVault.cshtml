@using BTCPayServer.Controllers
@model WalletSendVaultModel
@{
    var walletId = Context.GetRouteValue("walletId").ToString();
    var cancelUrl = Model.ReturnUrl ?? Url.Action(nameof(UIWalletsController.WalletTransactions), new { walletId });
    var backUrl = Model.BackUrl != null ? $"{Model.BackUrl}?returnUrl={Model.ReturnUrl}" : null;
    Layout = "_LayoutWizard";
    ViewData.SetActivePage(WalletsNavPages.Send, StringLocalizer["Sign the transaction"], walletId);
}

@section Navbar {
    @if (backUrl != null)
    {
		<a href="@Url.EnsureLocal(backUrl, Context.Request)" id="GoBack">
            <vc:icon symbol="back" />
        </a>
    }
	<a href="@Url.EnsureLocal(cancelUrl, Context.Request)" id="CancelWizard" class="cancel">
        <vc:icon symbol="cross" />
    </a>
}

<header class="text-center">
    <h1>@ViewData["Title"]</h1>
    <p class="lead text-secondary mt-3" text-translate="true">Using BTCPay Server Vault</p>
</header>

<partial name="LocalhostBrowserSupport" />

<div id="body" class="my-4">
    <form id="broadcastForm" asp-action="WalletSendVault" asp-route-walletId="@walletId" method="post" style="display:none;">
        <input type="hidden" id="WalletId" asp-for="WalletId" />
        <input type="hidden" asp-for="WebsocketPath" />
        <input type="hidden" asp-for="ReturnUrl" />
        <input type="hidden" asp-for="BackUrl" />
        <partial name="SigningContext" for="SigningContext" />
    </form>
    <div id="vaultPlaceholder"></div>
    <button id="vault-retry" class="btn btn-primary" style="display:none;" type="button" text-translate="true">Retry</button>
    <button id="vault-confirm" class="btn btn-primary" style="display:none;"></button>
</div>

<partial name="VaultElements" />

@section PageFootContent
{
    <script src="~/js/vaultbridge.js" type="text/javascript" defer="defer" asp-append-version="true"></script>
    <script src="~/js/vaultbridge.ui.js" type="text/javascript" defer="defer" asp-append-version="true"></script>
    <script>
        async function askSign() {
            var websocketPath = $("#WebsocketPath").val();
            var loc = window.location, ws_uri;
            if (loc.protocol === "https:") {
                ws_uri = "wss:";
            } else {
                ws_uri = "ws:";
            }
            ws_uri += "//" + loc.host;
            ws_uri += websocketPath;
            var html = $("#VaultConnection").html();
            $("#vaultPlaceholder").html(html);
            var vaultUI = new vaultui.VaultBridgeUI(ws_uri);
            
            while (!await vaultUI.askForDevice() || !await vaultUI.askSignPSBT({
                walletId: $("#WalletId").val(),
                psbt: $("#SigningContext_PSBT").val()
            })) {
            }
            $("#SigningContext_PSBT").val(vaultUI.psbt);
            $("#broadcastForm").submit();
        }
        document.addEventListener("DOMContentLoaded", function () {
            askSign();
        });
    </script>
}

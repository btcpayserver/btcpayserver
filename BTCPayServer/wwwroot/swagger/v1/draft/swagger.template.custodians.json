{
    "openapi": "3.0.0",
    "info": {
        "title": "BTCPay Greenfield API - Custodian Extension",
        "description": "API calls for handling custodial wallets and exchanges.",
        "version": "v1"
    },
    "paths": {
        "/api/v1/assets": {
            "get": {
                "tags": [
                    "Assets"
                ],
                "summary": "List Supported Assets",
                "description": "List all supported assets for the BTCPay instance. This includes both fiat currency codes + all crypto codes. You can add a filter to return only fiat or crypto. By default both are returned.",
                "operationId": "Custodians_GetSupportedAssets",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "description": "Filter results to contain only fiat or crypto. By default there is no filter and both types are returned.",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "fiat",
                                "crypto"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "list of supported assets",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AssetData"
                                    }
                                },
                                "example": [
                                    {
                                        "code": "BTC",
                                        "label": "Bitcoin",
                                        "type": "crypto"
                                    },
                                    {
                                        "code": "LTC",
                                        "label": "Litecoin",
                                        "type": "crypto"
                                    },
                                    {
                                        "code": "USD",
                                        "label": "US Dollar",
                                        "type": "fiat"
                                    },
                                    {
                                        "code": "EUR",
                                        "label": "Euro",
                                        "type": "fiat"
                                    }
                                ]
                            }
                        }
                    }
                },
                "security": [
                    {
                        "API Key": [
                            "TODO"
                        ],
                        "Basic": []
                    }
                ]
            }
        },
        "/api/v1/custodians": {
            "get": {
                "tags": [
                    "Custodians"
                ],
                "summary": "List Supported Custodians",
                "description": "List all supported custodians for the BTCPay instance. You can install plugins to add more custodians.",
                "operationId": "Custodians_GetSupportedCustodians",
                "responses": {
                    "200": {
                        "description": "list of supported custodians",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustodianDataList"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "API Key": [
                            "TODO"
                        ],
                        "Basic": []
                    }
                ]
            }
        },
        "/api/v1/store/{storeId}/custodian-accounts": {
            "get": {
                "tags": [
                    "Store Custodian Account"
                ],
                "summary": "List store custodian accounts",
                "parameters": [
                    {
                        "name": "storeId",
                        "in": "path",
                        "required": true,
                        "description": "The Store ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "assetBalances",
                        "in": "query",
                        "required": false,
                        "description": "Enable if you want the result to include the 'assetBalances' field. This will make the call slower or could cause the call to fail if the asset balances cannot be loaded (i.e. due to a bad API key).",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of custodian accounts for the store.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CustodianAccountData"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "If you are authenticated but forbidden to view the store's custodian accounts"
                    }
                }
            },
            "post": {
                "tags": [
                    "Store Custodian Account"
                ],
                "summary": "Register a custodial account with a store.",
                "description": "Register a custodial account with a store.",
                "requestBody": {
                    "x-name": "request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustodianAccountData"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "Information about the new custodian account",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustodianAccountData"
                                }
                            }
                        }
                    },
                    "400": {
                        "TODO": true
                    },
                    "403": {
                        "description": "If you are authenticated but forbidden to add new custodian account"
                    }
                },
                "security": [
                    {
                        "API Key": [
                            "btcpay.store.canmodifycustodianaccounts"
                        ],
                        "Basic": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Store Custodian Account"
                ],
                "summary": "Update a custodial account",
                "description": "Update a custodial account",
                "requestBody": {
                    "x-name": "request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustodianAccountData"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "The updated custodian account",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustodianAccountData"
                                }
                            }
                        }
                    },
                    "400": {
                        "TODO": true
                    },
                    "403": {
                        "description": "If you are authenticated but forbidden to modify new custodian account"
                    }
                },
                "security": [
                    {
                        "API Key": [
                            "btcpay.store.canmodifycustodianaccounts"
                        ],
                        "Basic": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Store Custodian Account"
                ],
                "summary": "Delete a store custodian account"
            }
        },
        "/api/v1/store/{storeId}/custodian-accounts/{accountId}": {
            "get": {
                "tags": [
                    "Store Custodian Account"
                ],
                "summary": "Get store custodian account",
                "parameters": [
                    {
                        "name": "storeId",
                        "in": "path",
                        "required": true,
                        "description": "The Store ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountId",
                        "in": "path",
                        "required": true,
                        "description": "The Custodian Account ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "assetBalances",
                        "in": "query",
                        "required": false,
                        "description": "Enable if you want the result to include the 'assetBalances' field. This will make the call slower or could cause the call to fail if the asset balances cannot be loaded (i.e. due to a bad API key).",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Information about the requested custodian account",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustodianAccountData"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "If you are authenticated but forbidden to view the store's custodian accounts"
                    }
                }
            }
        },
        "/api/v1/store/{storeId}/custodian-accounts/{accountId}/trade/quote": {
            "get": {
                "tags": [
                    "Store Custodian Account"
                ],
                "summary": "Get quote for trading one asset for another",
                "description": "Get the price for converting one asset into another.",
                "parameters": [
                    {
                        "name": "storeId",
                        "in": "path",
                        "required": true,
                        "description": "The Store ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountId",
                        "in": "path",
                        "required": true,
                        "description": "The Custodian Account ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fromAsset",
                        "in": "query",
                        "required": true,
                        "description": "The asset to convert.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "toAsset",
                        "in": "query",
                        "required": true,
                        "description": "The asset you want.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Information about the trade that was executed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/QuoteResultData"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No tradable asset pair found for this trade."
                    },
                    "403": {
                        "description": "If you are authenticated but forbidden to create trades"
                    }
                },
                "security": [
                    {
                        "API Key": [
                            "btcpay.store.canviewcustodianaccounts"
                        ],
                        "Basic": []
                    }
                ]
            }
        },
        "/api/v1/store/{storeId}/custodian-accounts/{accountId}/trade/market": {
            "post": {
                "tags": [
                    "Store Custodian Account"
                ],
                "summary": "Trade one asset for another",
                "description": "Trade one asset for another using a market order (=instant purchase with instant result or failure). A suitable asset pair will automatically be selected. If no asset pair is available, the call will fail.",
                "parameters": [
                    {
                        "name": "storeId",
                        "in": "path",
                        "required": true,
                        "description": "The Store ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountId",
                        "in": "path",
                        "required": true,
                        "description": "The Custodian Account ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "x-name": "request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TradeRequestData"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Information about the trade that was executed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TradeResultData"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No tradable asset pair found for this trade."
                    },
                    "403": {
                        "description": "If you are authenticated but forbidden to create trades"
                    }
                },
                "security": [
                    {
                        "API Key": [
                            "btcpay.store.cantradecustodianaccounts"
                        ],
                        "Basic": []
                    }
                ]
            }
        },
        "/api/v1/store/{storeId}/custodian-account/{accountId}/{paymentMethod}/address": {
            "get": {
                "tags": [
                    "Store Custodian Account"
                ],
                "summary": "Get a deposit address for custodian",
                "description": "Get a new deposit address for the custodian using the specified payment method (network + crypto code).",
                "parameters": [
                    {
                        "name": "storeId",
                        "in": "path",
                        "required": true,
                        "description": "The Store ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountId",
                        "in": "path",
                        "required": true,
                        "description": "The Custodian Account ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "paymentMethod",
                        "in": "path",
                        "required": true,
                        "description": "The payment method to use for the deposit. Example: \"BTC-OnChain\" or \"BTC-Lightning\"",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "deposit address",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "depositAddress": {
                                            "type": "string",
                                            "description": "The address to deposit to"
                                        }
                                    },
                                    "description": "A bitcoin address belonging to the custodian"
                                },
                                "example": {
                                    "depositAddress": "bc1qxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The custodian does not support deposits using this payment method."
                    },
                    "403": {
                        "description": "If you are authenticated but forbidden to get the deposit address"
                    }
                },
                "security": [
                    {
                        "API Key": [
                            "btcpay.store.candeposittocustodianaccounts"
                        ],
                        "Basic": []
                    }
                ]
            }
        },
        "/api/v1/store/{storeId}/custodian-accounts/{accountId}/withdrawal": {
            "post": {
                "tags": [
                    "Store Custodian Account"
                ],
                "summary": "Withdraw to store wallet",
                "description": "Withdraw an asset to your store wallet.",
                "parameters": [
                    {
                        "name": "storeId",
                        "in": "path",
                        "required": true,
                        "description": "The Store ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountId",
                        "in": "path",
                        "required": true,
                        "description": "The Custodian Account ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "x-name": "request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WithdrawalRequestData"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "Information about the withdrawal that was executed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WithdrawalResultData"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Withdrawal is not possible because you don't have this much in your account."
                    },
                    "404": {
                        "description": "Withdrawal is not possible for this asset."
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "type": "string",
                                            "description": "If you are authenticated but forbidden to create trades"
                                        },
                                        {
                                            "type": "string",
                                            "description": "Withdrawing to the address provided is not allowed"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "API Key": [
                            "btcpay.store.canwithdrawfromcustodianaccounts"
                        ],
                        "Basic": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "CustodianDataList": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/CustodianData"
                }
            },
            "CustodianData": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/CustodianData"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "code": {
                                "type": "string",
                                "description": "The unique code of the custodian. Example: \"kraken\".",
                                "nullable": false
                            },
                            "label": {
                                "type": "string",
                                "description": "The name of the custodian. Example: \"Kraken\".",
                                "nullable": false
                            },
                            "homepage": {
                                "type": "string",
                                "description": "The homepage of the custodian. Example: \"https://www.kraken.com\".",
                                "format": "url",
                                "nullable": false
                            },
                            "depositableAssets": {
                                "type": "array",
                                "description": "A list of asset (crypto or fiat) you can deposit on the custodian. Always in uppercase. Example: [\"BTC\",\"EUR\", \"USD\", \"ETH\",...]",
                                "nullable": false
                            },
                            "withdrawableAssets": {
                                "type": "array",
                                "description": "A list of asset (crypto or fiat) you can withdraw from the custodian. Always in uppercase. Example: [\"BTC\",\"EUR\", \"USD\", \"ETH\",...]",
                                "nullable": false
                            },
                            "tradeableAssetPairs": {
                                "type": "array",
                                "description": "A list of tradeable asset pairs, or NULL if the custodian cannot trade/convert assets. if thr asset pair contains fiat, fiat is always put last. If both assets are a cyrptocode or both are fiat, the pair is written alphabetically. Always in uppercase. Example: [\"BTC/EUR\",\"BTC/USD\", \"EUR/USD\", \"BTC/ETH\",...]",
                                "nullable": true
                            }
                        }
                    }
                ]
            },
            "AssetData": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "description": "The unique code of the asset. Example: BTC, USD, EUR, LTC, ..."
                    },
                    "label": {
                        "type": "string",
                        "description": "The human readable name of the asset. Example: Bitcoin, US Dollar, Euro, Litecoin, ..."
                    },
                    "type": {
                        "description": "Is this a fiat currency or a crypto code.",
                        "enum": [
                            "fiat",
                            "crypto"
                        ]
                    }
                }
            },
            "CustodianAccountData": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique code of the customer's account with this custodian. The format depends on the custodian."
                    },
                    "storeId": {
                        "type": "string",
                        "description": "The store ID."
                    },
                    "custodianCode": {
                        "type": "string",
                        "description": "The code for the custodian. I.e. \"kraken\""
                    },
                    "assetBalances": {
                        "type": "array",
                        "description": "A real-time loaded list of all assets (fiat and crypto) on this custodian and the quantity held in the account. Assets with qty 0 can be omitted.",
                        "items": {
                            "$ref": "#/components/schemas/AssetBalanceData"
                        }
                    }
                },
                "example": {
                    "accountId": "xxxxxxxxxxxxxxx",
                    "storeId": "xxxxxxxxxxxxxx",
                    "custodianCode": "kraken",
                    "assetBalances": [
                        {
                            "asset": "BTC",
                            "qty": 1.23456
                        },
                        {
                            "asset": "USD",
                            "qty": 123456.78
                        }
                    ]
                }
            },
            "QuoteResultData": {
                "type": "object",
                "properties": {
                    "fromAsset": {
                        "type": "string",
                        "description": "The asset to trade.",
                        "required": true
                    },
                    "toAsset": {
                        "type": "string",
                        "description": "The asset you want.",
                        "required": true
                    }
                },
                "example": {
                    "fromAsset": "USD",
                    "toAsset": "BTC"
                }
            },
            "TradeRequestData": {
                "type": "object",
                "properties": {
                    "fromAsset": {
                        "type": "string",
                        "description": "The asset to trade.",
                        "required": true
                    },
                    "toAsset": {
                        "type": "string",
                        "description": "The asset you want.",
                        "required": true
                    },
                    "qty": {
                        "oneOf": [
                            {
                                "type": "number",
                                "description": "The qty of fromAsset to convert into toAsset."
                            },
                            {
                                "type": "string",
                                "description": "The percent of fromAsset to convert into toAsset. The value must end with \"%\" to be considered a percentage."
                            }
                        ],
                        "required": true
                    }
                },
                "example": {
                    "fromAsset": "USD",
                    "toAsset": "BTC",
                    "qty": "50%"
                }
            },
            "TradeResultData": {
                "type": "object",
                "properties": {
                    "fromAsset": {
                        "type": "string",
                        "description": "The asset to trade."
                    },
                    "toAsset": {
                        "type": "string",
                        "description": "The asset you want."
                    },
                    "ledgerEntries": {
                        "type": "array",
                        "description": "The asset entries that were changed during the trade. This is an array of at least 2 items for the asset sold and the asset gained. The 1st item is always the asset sold and the 2nd item is always the asset bought. It may also includes ledger entries for the costs of the trade and may include credits or exchange tokens used to give a discount.",
                        "items": {
                            "$ref": "#/components/schemas/LedgerEntryData"
                        }
                    },
                    "tradeId": {
                        "type": "string",
                        "description": "The unique ID of the trade/order used by the exchange.",
                        "nullable": true
                    },
                    "accountId": {
                        "type": "string",
                        "description": "The unique ID of the custodian account used.",
                        "nullable": false
                    },
                    "custodianCode": {
                        "type": "string",
                        "description": "The code of the custodian used.",
                        "nullable": false
                    }
                },
                "example": {
                    "fromAsset": "BTC",
                    "toAsset": "USD",
                    "ledgerEntries": [
                        {
                            "asset": "BTC",
                            "qty": -1.23456,
                            "comment": "Asset sold"
                        },
                        {
                            "asset": "USD",
                            "qty": 61728,
                            "comment": "Asset bought"
                        },
                        {
                            "asset": "BTC",
                            "qty": -0.00123456,
                            "comment": "Trading fee"
                        },
                        {
                            "asset": "KFEE",
                            "qty": -123.456,
                            "comment": "Kraken fee credits"
                        }
                    ],
                    "tradeId": "XXXX-XXXX-XXXX-XXXX",
                    "accountId": "xxxxxxxxxxxxxx",
                    "custodianCode": "kraken"
                }
            },
            "WithdrawalRequestData": {
                "type": "object",
                "properties": {
                    "asset": {
                        "type": "string",
                        "description": "The asset that is being withdrawn.",
                        "required": true
                    },
                    "qty": {
                        "type": "number",
                        "description": "The qty to withdraw.",
                        "required": true
                    }
                },
                "example": {
                    "asset": "BTC",
                    "qty": 0.123456
                }
            },
            "WithdrawalResultData": {
                "type": "object",
                "properties": {
                    "asset": {
                        "type": "string",
                        "description": "The asset that is being withdrawn."
                    },
                    "ledgerEntries": {
                        "type": "array",
                        "description": "The asset entries that were changed during the withdrawal. The first item is always the withdrawal itself. It could also includes ledger entries for the costs and may include credits or exchange tokens to give a discount.",
                        "items": {
                            "$ref": "#/components/schemas/LedgerEntryData"
                        }
                    },
                    "withdrawalId": {
                        "type": "string",
                        "description": "The unique ID of the withdrawal used by the exchange.",
                        "nullable": true
                    },
                    "accountId": {
                        "type": "string",
                        "description": "The unique ID of the custodian account used.",
                        "nullable": false
                    },
                    "custodianCode": {
                        "type": "string",
                        "description": "The code of the custodian used.",
                        "nullable": false
                    }
                },
                "example": {
                    "asset": "BTC",
                    "ledgerEntries": [
                        {
                            "asset": "BTC",
                            "qty": -0.123456,
                            "comment": "Asset withdrawn"
                        },
                        {
                            "asset": "BTC",
                            "qty": -0.005,
                            "comment": "Fixed withdrawal fee"
                        }
                    ],
                    "address": "bc1qxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
                    "withdrawalId": "XXXX-XXXX-XXXX-XXXX",
                    "accountId": "xxxxxxxxxxxxxxx",
                    "custodianCode": "kraken"
                }
            },
            "LedgerEntryData": {
                "type": "object",
                "description": "A single ledger entry meaning an asset and qty has changed (increased or decreased).",
                "properties": {
                    "asset": {
                        "type": "string",
                        "description": "An asset.",
                        "nullable": false
                    },
                    "qty": {
                        "type": "number",
                        "description": "The quantity changed of the asset. Can be positive or negative.",
                        "nullable": false
                    },
                    "type": {
                        "type": "string",
                        "description": "0 = trade, 1 = fee",
                        "nullable": false
                    }
                },
                "example": {
                    "asset": "BTC",
                    "qty": 1.23456,
                    "comment": null
                }
            },
            "AssetBalanceData": {
                "type": "object",
                "description": "An asset and it's qty.",
                "properties": {
                    "asset": {
                        "type": "string",
                        "description": "An asset.",
                        "nullable": false
                    },
                    "qty": {
                        "type": "number",
                        "description": "The quantity changed of the asset. Can be positive or negative.",
                        "nullable": false
                    }
                },
                "example": {
                    "asset": "BTC",
                    "qty": 1.23456
                }
            }
        }
    }
}

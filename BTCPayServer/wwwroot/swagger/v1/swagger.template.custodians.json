{
    "openapi": "3.0.0",
    "info": {
        "title": "BTCPay Greenfield API - Custodian Extension",
        "description": "API calls for handling custodial wallets and exchanges.",
        "version": "v1"
    },
    "paths": {
        "/api/v1/custodians": {
            "get": {
                "tags": [
                    "Custodians"
                ],
                "summary": "Get custodians",
                "description": "View information about the available custodians. You can install plugins to gain access to more parties.",
                "operationId": "Custodians_GetCustodians",
                "responses": {
                    "200": {
                        "description": "list of custodians",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustodianDataList"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "API Key": [
                            "TODO"
                        ],
                        "Basic": []
                    }
                ]
            }
        },
        "/api/v1/store/{storeId}/custodian-accounts": {
            "get": {
                "tags": [
                    "Store Custodian Account"
                ],
                "summary": "List all store custodian accounts",
                "responses": {
                    "200": {
                        "description": "List of custodian accounts for the store.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustodianAccountData"
                                }
                            }
                        }
                    }
                },
                "post": {
                    "tags": [
                        "Store Custodian Account"
                    ],
                    "summary": "Register a custodial account with a store.",
                    "description": "Register a custodial account with a store.",
                    "requestBody": {
                        "x-name": "request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustodianAccountData"
                                }
                            }
                        },
                        "required": true,
                        "x-position": 1
                    },
                    "responses": {
                        "200": {
                            "description": "Information about the new custodian account",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/CustodianAccountData"
                                    }
                                }
                            }
                        },
                        "400": {
                            "TODO": true
                        },
                        "403": {
                            "description": "If you are authenticated but forbidden to add new custodian account"
                        }
                    },
                    "security": [
                        {
                            "API Key": [
                                "TODO"
                            ],
                            "Basic": []
                        }
                    ]
                },
                "put": {
                    "tags": [
                        "Store Custodian Account"
                    ],
                    "summary": "Update a store custodian account"
                },
                "delete": {
                    "tags": [
                        "Store Custodian Account"
                    ],
                    "summary": "Delete a store custodian account"
                }
            }
        },
        "/api/v1/store/{storeId}/custodian-accounts/{accountId}/trade": {
            "post": {
                "tags": [
                    "Custodian Account Trade"
                ],
                "summary": "Trade one asset for another.",
                "description": "Trade one asset for another.",
                "requestBody": {
                    "x-name": "request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TradeRequestData"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "Information about the trade that was executed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TradeResultData"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No asset pair found for this trade."
                    },
                    "403": {
                        "description": "If you are authenticated but forbidden to create trades"
                    }
                },
                "security": [
                    {
                        "API Key": [
                            "TODO"
                        ],
                        "Basic": []
                    }
                ]
            }
        },
        "/api/v1/store/{storeId}/custodian-accounts/{accountId}/{cryptoCode}/address": {
            "post": {
                "tags": [
                    "Custodian Account"
                ],
                "summary": "Get deposit address for custodian",
                "description": "Get an on-chain deposit address for the custodian",
                "parameters": [
                    {
                        "name": "storeId",
                        "in": "path",
                        "required": true,
                        "description": "The Store ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountId",
                        "in": "path",
                        "required": false,
                        "description": "The Custodian Account ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cryptoCode",
                        "type": "string",
                        "nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "deposit address",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "description": "A bitcoin address belonging to the custodian"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The custodian does not support deposits"
                    },
                    "403": {
                        "description": "If you are authenticated but forbidden to get the deposit address"
                    }
                },
                "security": [
                    {
                        "API Key": [
                            "TODO"
                        ],
                        "Basic": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "CustodianDataList": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/CustodianData"
                }
            },
            "CustodianData": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/CustodianData"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "code": {
                                "type": "string",
                                "description": "The unique code of the custodian. Example: \"kraken\".",
                                "nullable": false
                            },
                            "label": {
                                "type": "string",
                                "description": "The name of the custodian. Example: \"Kraken\".",
                                "nullable": false
                            },
                            "homepage": {
                                "type": "string",
                                "description": "The homepage of the custodian. Example: \"https://www.kraken.com\".",
                                "format": "url",
                                "nullable": false
                            },
                            "supportedAssets": {
                                "type": "array",
                                "description": "A list of asset (crypto or fiat) the custodian can store. Always in uppercase. Example: [\"BTC\",\"EUR\", \"USD\", \"ETH\",...]",
                                "nullable": false
                            },
                            "tradeableAssetPairs": {
                                "type": "array",
                                "description": "A list of tradeable asset pairs, or NULL if the custodian cannot trade/convert assets. if thr asset pair contains fiat, fiat is always put last. If both assets are a cyrptocode or both are fiat, the pair is written alphabetically. Always in uppercase. Example: [\"BTC/EUR\",\"BTC/USD\", \"EUR/USD\", \"BTC/ETH\",...]",
                                "nullable": true
                            },
                            "supportsTaprootDeposits": {
                                "type": "boolean",
                                "description": "The custodian accepts deposits via taproot addresses.",
                                "nullable": false
                            },
                            "supportsTaprootWithdrawals": {
                                "type": "boolean",
                                "description": "The custodian accepts withdrawals to taproot addresses.",
                                "nullable": false
                            },
                            "supportsSegwitDeposits": {
                                "type": "boolean",
                                "description": "The custodian accepts deposits via segwit addresses.",
                                "nullable": false
                            },
                            "supportsSegwitWithdrawals": {
                                "type": "boolean",
                                "description": "The custodian accepts withdrawals to segwit addresses.",
                                "nullable": false
                            },
                            "supportsLightningDeposits": {
                                "type": "boolean",
                                "description": "The custodian accepts deposits via lightning network.",
                                "nullable": false
                            },
                            "supportsLightningWithdrawals": {
                                "type": "boolean",
                                "description": "The custodian accepts withdrawals via lightning network.",
                                "nullable": false
                            },
                            "supportsLNURLPay": {
                                "type": "boolean",
                                "description": "The custodian accepts deposits via LNURL-Pay.",
                                "nullable": false
                            },
                            "supportsLNURLWithdrawals": {
                                "type": "boolean",
                                "description": "The custodian accepts withdrawals via LNURL-Withdraw.",
                                "nullable": false
                            },
                            "supportsNonInteractiveWithdrawals": {
                                "type": "boolean",
                                "description": "The custodian accepts withdrawals without requiring user intervention (like clicking on a link in an email).",
                                "nullable": false
                            },
                            "supportsWithdrawalsToNewAddresses": {
                                "type": "boolean",
                                "description": "The custodian accepts withdrawals to an address that is not (yet) on a previously defined whitelist. Some exchanges only allow you to withdraw to one or more addresses that you need to enter beforehand.",
                                "nullable": false
                            },
                            "hasWebhookForDeposits": {
                                "type": "boolean",
                                "description": "The custodian can send a webhook when a deposit is made. This way BTCPay Server does not need to poll.",
                                "nullable": false
                            },
                            "hasWebhookForWithdrawals": {
                                "type": "boolean",
                                "description": "The custodian can send a webhook when a withdrawal is made. This way BTCPay Server does not need to poll.",
                                "nullable": false
                            }
                        }
                    }
                ]
            },
            "CustodianAccountData": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "The unique code of the customer's account with this custodian. The format depends on the custodian."
                    },
                    "custodianCode": {
                        "type": "string",
                        "description": "The code for the custodian. I.e. \"kraken\""
                    },
                    "assetBalances": {
                        "type": "array",
                        "description": "A list of assets (fiat or crypto) on this custodian and the quantity held in the account. Assets with qty 0 can be omitted.",
                        "items": {
                            "$ref": "#/components/schemas/LedgerEntryData"
                        }
                    }
                }
            },
            "TradeRequestData": {
                "type": "object",
                "properties": {
                    "fromAsset": {
                        "type": "string",
                        "description": "The asset to trade."
                    },
                    "toAsset": {
                        "type": "string",
                        "description": "The asset you want."
                    },
                    "tradeType": {
                        "type": "string",
                        "description": "The type of trade. Currently only \"market\" is supported, meaning an instant purchase with instant result or failure."
                    },
                    "qty": {
                        "oneOf": [
                            {
                                "type": "number",
                                "description": "The amount of fromAsset to convert into toAsset."
                            },
                            {
                                "type": "string",
                                "description": "The percent of fromAsset to convert into toAsset. The value must end with \"%\" to be considered a percentage."
                            }
                        ]
                    }
                }
            },
            "TradeResultData": {
                "type": "object",
                "properties": {
                    "fromAsset": {
                        "type": "string",
                        "description": "The asset to trade."
                    },
                    "toAsset": {
                        "type": "string",
                        "description": "The asset you want."
                    },
                    "costs": {
                        "type": "array",
                        "description": "The assets used to pay for the trade. This is an array and can contain multiple items if the trade involved credits or exchange tokens to give a discount.",
                        "items": {
                            "$ref": "#/components/schemas/LedgerEntryData"
                        }
                    },
                    "tradeType": {
                        "type": "string",
                        "description": "The type of trade that was executed. Currently only \"market\" is supported, meaning an instant purchase with instant result or failure."
                    },
                    "tradeStatus": {
                        "enum": [
                            "Queued",
                            "Complete"
                        ]
                    },
                    "tradeId": {
                        "type": "string",
                        "description": "The ID of the trade/order used by the exchange.",
                        "nullable": true
                    },
                    "qtyFromAsset": {
                        "type": "number",
                        "description": "The amount of fromAsset that was converted. Will be a negative number."
                    },
                    "qtyToAsset": {
                        "type": "number",
                        "description": "The amount of toAsset that was gained. Will be a positive number."
                    }
                }
            },
            "LedgerEntryData": {
                "type": "object",
                "description": "A single ledger entry meaning an asset and qty has changed (increased or decreased).",
                "properties": {
                    "asset": {
                        "type": "string",
                        "description": "An asset.",
                        "nullable": false
                    },
                    "qty": {
                        "type": "number",
                        "description": "The quantity changed of the asset. Can be positive or negative.",
                        "nullable": false
                    }
                }
            }
        }
    },
    "tags": [
        {
            "name": "Custodians"
        }
    ]
}

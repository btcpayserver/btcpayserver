{
    "paths": {
        "/api/v1/stores/{storeId}/payment-methods/{paymentMethodId}/generate": {
            "post": {
                "tags": [
                    "Store Payment Methods (On Chain)"
                ],
                "summary": "Generate store on-chain wallet",
                "parameters": [
                    {
                        "name": "storeId",
                        "in": "path",
                        "required": true,
                        "description": "The store to fetch",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/PaymentMethodId"
                    }
                ],
                "description": "Generate a wallet and update the specified store's payment method to it",
                "requestBody": {
                    "x-name": "request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GenerateOnChainWalletRequest"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "operationId": "StoreOnChainPaymentMethods_GenerateOnChainWallet",
                "responses": {
                    "200": {
                        "description": "updated specified payment method with the generated wallet",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/GenericPaymentMethodData"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "mnemonic": {
                                                    "$ref": "#/components/schemas/Mnemonic"
                                                },
                                                "config": {
                                                    "$ref": "#/components/schemas/OnChainPaymentMethodBaseData"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "A list of errors that occurred when updating the store payment method",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationProblemDetails"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "If you are authenticated but forbidden to update the specified store"
                    },
                    "404": {
                        "description": "The key is not found for this store"
                    }
                },
                "security": [
                    {
                        "API_Key": [
                            "btcpay.store.canmodifystoresettings"
                        ],
                        "Basic": []
                    }
                ]
            }
        },
        "/api/v1/stores/{storeId}/payment-methods/{paymentMethodId}/preview": {
            "get": {
                "tags": [
                    "Store Payment Methods (On Chain)"
                ],
                "summary": "Preview store on-chain payment method addresses",
                "parameters": [
                    {
                        "name": "storeId",
                        "in": "path",
                        "required": true,
                        "description": "The store to fetch",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "paymentMethodId",
                        "in": "path",
                        "required": true,
                        "description": "The payment method id of the payment method to update",
                        "schema": {
                            "type": "string"
                        },
                        "example": "BTC-CHAIN"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "description": "From which index to fetch the addresses",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "description": "Number of addresses to preview",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "description": "View addresses of the current payment method of the store",
                "operationId": "StoreOnChainPaymentMethods_GetOnChainPaymentMethodPreview",
                "responses": {
                    "200": {
                        "description": "specified payment method addresses",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OnChainPaymentMethodPreviewResultData"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "If you are authenticated but forbidden to view the specified store"
                    },
                    "404": {
                        "description": "The key is not found for this store/payment method"
                    }
                },
                "security": [
                    {
                        "API_Key": [
                            "btcpay.store.canviewstoresettings"
                        ],
                        "Basic": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Store Payment Methods (On Chain)"
                ],
                "summary": "Preview proposed store on-chain payment method addresses",
                "parameters": [
                    {
                        "name": "storeId",
                        "in": "path",
                        "required": true,
                        "description": "The store to fetch",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cryptoCode",
                        "in": "path",
                        "required": true,
                        "description": "The crypto code of the payment method to fetch",
                        "schema": {
                            "type": "string"
                        },
                        "example": "BTC"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "description": "From which index to fetch the addresses",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "description": "Number of addresses to preview",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "description": "View addresses of a proposed payment method of the store",
                "operationId": "StoreOnChainPaymentMethods_POSTOnChainPaymentMethodPreview",
                "requestBody": {
                    "x-name": "request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "derivationScheme": {
                                        "type": "string",
                                        "description": "The derivation scheme",
                                        "example": "xpub..."
                                    }
                                }
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "specified payment method addresses",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OnChainPaymentMethodPreviewResultData"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "If you are authenticated but forbidden to view the specified store"
                    },
                    "404": {
                        "description": "The key is not found for this store"
                    }
                },
                "security": [
                    {
                        "API_Key": [
                            "btcpay.store.canviewstoresettings"
                        ],
                        "Basic": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Mnemonic": {
                "type": "string",
                "description": "A BIP39 mnemonic",
                "example": "quality warfare scatter zone report forest potato local swing solve upon candy garment boost lab"
            },
            "OnChainPaymentMethodBaseData": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "derivationScheme": {
                        "type": "string",
                        "description": "The derivation scheme",
                        "example": "xpub..."
                    },
                    "label": {
                        "type": "string",
                        "description": "A label that will be shown in the UI"
                    },
                    "accountKeyPath": {
                        "type": "string",
                        "description": "The wallet fingerprint followed by the keypath to derive the account key used for signing operation or creating PSBTs",
                        "example": "abcd82a1/84'/0'/0'"
                    }
                }
            },
            "OnChainPaymentMethodDataPreview": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/OnChainPaymentMethodBaseData"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "cryptoCode": {
                                "type": "string",
                                "description": "Crypto code of the payment method"
                            }
                        }
                    }
                ]
            },
            "OnChainPaymentMethodPreviewResultData": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "addresses": {
                        "type": "array",
                        "description": "a list of addresses generated by the derivation scheme",
                        "items": {
                            "$ref": "#/components/schemas/OnChainPaymentMethodPreviewResultAddressItem"
                        }
                    }
                }
            },
            "OnChainPaymentMethodPreviewResultAddressItem": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "keyPath": {
                        "type": "string",
                        "description": "The key path relative to the account key path."
                    },
                    "address": {
                        "type": "string",
                        "description": "The address generated at the key path"
                    }
                }
            },
            "GenerateOnChainWalletRequest": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "existingMnemonic": {
                        "$ref": "#/components/schemas/Mnemonic"
                    },
                    "passphrase": {
                        "type": "string",
                        "description": "A passphrase for the BIP39 mnemonic seed"
                    },
                    "accountNumber": {
                        "type": "number",
                        "default": 0,
                        "description": "The account to derive from the BIP39 mnemonic seed"
                    },
                    "savePrivateKeys": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether to store the seed inside BTCPay Server to enable some additional services. IF `false` AND `existingMnemonic` IS NOT SPECIFIED, BE SURE TO SECURELY STORE THE SEED IN THE RESPONSE!"
                    },
                    "importKeysToRPC": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether to import all addresses generated via BTCPay Server into the underlying node wallet. (Private keys will also be imported if `savePrivateKeys` is set to true."
                    },
                    "wordList": {
                        "type": "string",
                        "description": "If `existingMnemonic` is not set, a mnemonic is generated using the specified wordList.",
                        "default": "English",
                        "x-enumNames": [
                            "English",
                            "Japanese",
                            "Spanish",
                            "ChineseSimplified",
                            "ChineseTraditional",
                            "French",
                            "PortugueseBrazil",
                            "Czech"
                        ],
                        "enum": [
                            "English",
                            "Japanese",
                            "Spanish",
                            "ChineseSimplified",
                            "ChineseTraditional",
                            "French",
                            "PortugueseBrazil",
                            "Czech"
                        ]
                    },
                    "wordCount": {
                        "type": "number",
                        "description": "If `existingMnemonic` is not set, a mnemonic is generated using the specified wordCount.",
                        "default": 12,
                        "x-enumNames": [
                            12,
                            15,
                            18,
                            21,
                            24
                        ],
                        "enum": [
                            12,
                            15,
                            18,
                            21,
                            24
                        ]
                    },
                    "scriptPubKeyType": {
                        "type": "string",
                        "description": "the type of wallet to generate",
                        "default": "Segwit",
                        "x-enumNames": [
                            "Legacy",
                            "Segwit",
                            "SegwitP2SH"
                        ],
                        "enum": [
                            "Legacy",
                            "Segwit",
                            "SegwitP2SH"
                        ]
                    }
                }
            }
        }
    },
    "tags": [
        {
            "name": "Store Payment Methods (On Chain)",
            "description": "Store Payment Methods (On Chain) operations"
        }
    ]
}
